{"version":3,"sources":["glview/vecmath.ts","glview/shaders.ts","glview/glview.ts","glview/vbo.ts","glview/lines.ts","glview/tris.ts","glview/points.ts","glview/stl.ts","GLCanvas.tsx","glview/image.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Vec2","x","y","this","Vec3","Math","sqrt","lengthSquared","v","scalar","ZERO","EX","EY","z","EZ","Matrix4","a","length","Error","m","c","Array","i","j","k","Sphere","center","radius","sphere1","sphere2","vec","sub","len","t","add","mul","spheres","boundaryOfTwo","removeAt","ret","pop","sphere","reduce","acc","item","idx","l","UNIT","Interval","lower","upper","undefined","INFINITY","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","IntervalBuilder","new","Box2","ll","ul","lu","uu","Box3","points","builder","Box3Builder","build","Triangle","p1","p2","p3","Quaternion","w","q","Rotation","clone","p","conjugate","r","ww","xx","yy","zz","wx","wy","wz","xy","yz","zx","transform","axis","radian","cos","s","sin","isFinite","RigidTrans","inverse","neg","mat","toMatrix","array","PointsProgram","gl","program","atrPosition","uniModelViewMatrix","uniProjMatrix","uniColor","glview","vs","fs","getAttribLocation","getUniformLocation","rc","buffer","mode","color3f","useProgram","uniform3f","g","b","glUniformModelViewMatrix","glUniformProjectionMatrix","enablePoints","drawArrays","vertexCount","get","PointNormalsProgramImpl","srcV","srcF","atrNormal","enableNormals","PointNormalsCommon","vs2","PhongShadingProgram","getParameter","VERSION","startsWith","fs2","ToonShadingProgram","CrazyShadingProgram","PulseAnimationProgram","uniSeconds","uniAmplitude","seconds","setInterval","dt","uniform1f","VerticesDrawer","entity","dispose","draw","session","emitColor3f","VertexNormalsDrawer","shadingPrograms","selectionProgram","shaderNo","Color3","round","Camera","focus","scale","volume","h","d","depth","canvasWidth","canvasHeight","orthoMatrix","world","inv","centerZ","makeProjMatrix","SelectionSession","objects","obj","push","encodeToColor3b","to3f","color3b","decodeFromColor3b","n","floor","SelectionBuffer","renderFunc","fb","depthBuf","colorBuf","createFramebuffer","createRenderbuffer","createTexture","bindFramebuffer","FRAMEBUFFER","bindRenderbuffer","RENDERBUFFER","framebufferRenderbuffer","DEPTH_ATTACHMENT","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","framebufferTexture2D","COLOR_ATTACHMENT0","deleteFramebuffer","deleteRenderbuffer","deleteTexture","width","height","console","log","renderbufferStorage","DEPTH_COMPONENT16","texImage2D","RGB","UNSIGNED_BYTE","viewport","render","pixels","Uint8Array","readPixels","color","getObject","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","flush","DrawableList","items","drawForSelection","SceneGraph","nodes","drawer","map","getDrawer","node","boundingSphere","filter","boundaryOfArray","setNodes","GLView","canvas","useWebGL2","sceneGraph","renderIntervalMilliseconds","camera","selectionBuf","getContext","createContext","clearDepth","enable","DEPTH_TEST","depthFunc","GREATER","oncontextmenu","addEventListener","e","button","lengthPerPixel","offsetX","offsetY","x0","y0","onMouseMove","dx","dy","move","shiftKey","ctrlKey","abs","factor","cross","ofAxis","document","onMouseUp","removeEventListener","deltaY","select","ownerDocument","key","shaders","incrementShaderNo","fit","clearSession","createMatrix","projMatrix","viewMatrix","location","uniformMatrix4fv","min","rect","getBoundingClientRect","margin","left","resize","window","innerWidth","innerHeight","top","buildShader","type","src","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createProgram","shaderV","VERTEX_SHADER","shaderF","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","createCache","factory","cache","find","value","createPointsBuffer","Points","createBuffer","data","buf","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","deleteBuffer","enableVertexAttribArray","vertexAttribPointer","FLOAT","InterleavedPointNormals","pointNormals","Lines","boundary","vbo","LINES","boundaryOf","Triangles","vertices","createVertexBuffer","TRIANGLES","getPoint","Float32Array","count","triangleCount","next","POINTS","ArrayBuf","file","Promise","resolve","reader","FileReader","onload","result","readAsArrayBuffer","STLFormat","view","DataView","ntris","getUint32","pos","read","getFloat32","nx","ny","nz","readFile","readBuf","url","fetch","response","arrayBuffer","React","PureComponent","GLCanvas2","props","useRef","useEffect","scene","current","addNode","renderInterval","clearNodes","ref","style","borderStyle","ImageBoardProgram","atrTexCoord","uniTexture","uniIsTextureEnabled","texOrColor","texCoords","uniform1i","TRIANGLE_FAN","image","texture","RGBA","generateMipmap","ImageBoardDrawer","createTexCoordBuffer","ImageBoard","area","genRectPoints","to3d","uvpoints","points_ccw","App","useState","setScene","stl","readURL","then","className","id","accept","onChange","files","target","Image","img","readAsDataURL","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"2SACaA,EAAb,WAEI,WAAYC,EAAWC,GAAY,yBAD1BD,OACyB,OADLC,OACK,EAC9BC,KAAKF,EAAIA,EAAGE,KAAKD,EAAIA,EAH7B,mDASQ,OAAO,IAAIE,EAAKD,KAAKF,EAAGE,KAAKD,EAAG,KATxC,8BAYQ,OAAO,IAAIF,EAAKG,KAAKF,EAAGE,KAAKD,KAZrC,sCAeQ,OAAOC,KAAKF,EAAIE,KAAKF,EAAIE,KAAKD,EAAIC,KAAKD,IAf/C,+BAkBQ,OAAOG,KAAKC,KAAKH,KAAKI,mBAlB9B,4BAqBQ,OAAO,IAAIP,GAAMG,KAAKF,GAAIE,KAAKD,KArBvC,0BAuBQM,GACA,OAAO,IAAIR,EAAKG,KAAKF,EAAIO,EAAEP,EAAGE,KAAKD,EAAIM,EAAEN,KAxBjD,0BA0BQM,GACA,OAAO,IAAIR,EAAKG,KAAKF,EAAIO,EAAEP,EAAGE,KAAKD,EAAIM,EAAEN,KA3BjD,0BA6BQO,GACA,OAAO,IAAIT,EAAKS,EAASN,KAAKF,EAAGQ,EAASN,KAAKD,OA9BvD,KAAaF,EAKOU,KAAO,IAAIV,EAAK,EAAG,GAL1BA,EAMOW,GAAK,IAAIX,EAAK,EAAG,GANxBA,EAOOY,GAAK,IAAIZ,EAAK,EAAG,GA2B9B,IAAMI,EAAb,WAEI,WAAYH,EAAWC,EAAWW,GAAY,yBADrCZ,OACoC,OADhBC,OACgB,OADIW,OACJ,EACzCV,KAAKF,EAAIA,EAAGE,KAAKD,EAAIA,EAAGC,KAAKU,EAAIA,EAHzC,oDAUQ,OAAO,IAAIT,EAAKD,KAAKF,EAAGE,KAAKD,EAAGC,KAAKU,KAV7C,sCAaQ,OAAOV,KAAKF,EAAIE,KAAKF,EAAIE,KAAKD,EAAIC,KAAKD,EAAIC,KAAKU,EAAIV,KAAKU,IAbjE,+BAgBQ,OAAOR,KAAKC,KAAKH,KAAKI,mBAhB9B,4BAmBQ,OAAO,IAAIH,GAAMD,KAAKF,GAAIE,KAAKD,GAAIC,KAAKU,KAnBhD,0BAqBQL,GACA,OAAO,IAAIJ,EAAKD,KAAKF,EAAIO,EAAEP,EAAGE,KAAKD,EAAIM,EAAEN,EAAGC,KAAKU,EAAIL,EAAEK,KAtB/D,0BAwBQL,GACA,OAAO,IAAIJ,EAAKD,KAAKF,EAAIO,EAAEP,EAAGE,KAAKD,EAAIM,EAAEN,EAAGC,KAAKU,EAAIL,EAAEK,KAzB/D,0BA2BQJ,GACA,OAAO,IAAIL,EAAKK,EAASN,KAAKF,EAAGQ,EAASN,KAAKD,EAAGO,EAASN,KAAKU,KA5BxE,4BA8BUL,GACF,OAAO,IAAIJ,EACPD,KAAKD,EAAIM,EAAEK,EAAIV,KAAKU,EAAIL,EAAEN,EAC1BC,KAAKU,EAAIL,EAAEP,EAAIE,KAAKF,EAAIO,EAAEK,EAC1BV,KAAKF,EAAIO,EAAEN,EAAIC,KAAKD,EAAIM,EAAEP,OAlCtC,KAAaG,EAKOM,KAAO,IAAIN,EAAK,EAAG,EAAG,GAL7BA,EAMOO,GAAK,IAAIP,EAAK,EAAG,EAAG,GAN3BA,EAOOQ,GAAK,IAAIR,EAAK,EAAG,EAAG,GAP3BA,EAQOU,GAAK,IAAIV,EAAK,EAAG,EAAG,GA8BjC,IAAMW,EAAb,WAEI,WAAYC,GACR,GADsB,yBADlBA,OACiB,EACJ,KAAbA,EAAEC,OAAe,MAAM,IAAIC,MAAM,2BACrCf,KAAKa,EAAIA,EAJjB,gDAyBQG,GAEA,IADA,IAAMC,EAAI,IAAIC,MAAc,IACnBC,EAAI,EAAGA,EAAI,IAAKA,EACrB,IAAK,IAAIC,EAAI,EAAGA,EAAI,IAAKA,EACrB,IAAK,IAAIC,EAAI,EAAGA,EAAI,IAAKA,EACrBJ,EAAEE,EAAI,EAAIC,IAAMpB,KAAKa,EAAEM,EAAI,EAAIE,GAAKL,EAAEH,EAAE,EAAIO,EAAIC,GAI5D,OAAO,IAAIT,EAAQK,KAlC3B,4BAuBQ,OAAOjB,KAAKa,KAvBpB,4BAOQ,OAAO,IAAID,EAAQ,CACf,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,MAXrB,2BAeQ,OAAO,IAAIA,EAAQ,CACf,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,QAnBrB,KAsCaU,EAAb,WAGI,WAAYC,EAAcC,GAAiB,yBAFlCD,YAEiC,OADjCC,YACiC,EACtCxB,KAAKuB,OAASA,EACdvB,KAAKwB,OAASA,EALtB,+DAQyBC,EAAiBC,GAClC,IAAMC,EAAMD,EAAQH,OAAOK,IAAIH,EAAQF,QACjCM,EAAMF,EAAIb,SAChB,GAAIe,EAAMH,EAAQF,OAASC,EAAQD,OAAQ,OAAOC,EAClD,GAAII,EAAMJ,EAAQD,OAASE,EAAQF,OAAQ,OAAOE,EAClD,IAAMI,GAAKD,EAAMH,EAAQF,OAASC,EAAQD,QAAU,EAGpD,OAAO,IAAIF,EAFIG,EAAQF,OAAOQ,IAAIJ,EAAIK,IAAIF,EAAID,IAC/BA,EAAMJ,EAAQD,OAASE,EAAQF,OAAS,KAf/D,sCAkB2BS,GACnB,OAAQA,EAAQnB,QACZ,KAAK,EAAG,OAAO,IAAIQ,EAAOrB,EAAKM,KAAM,GACrC,KAAK,EAAG,OAAO0B,EAAQ,GACvB,KAAK,EAAG,OAAOX,EAAOY,cAAcD,EAAQ,GAAIA,EAAQ,IACxD,QASI,IARA,IAAME,EAAW,SAAChB,GACd,IAAMiB,EAAMH,EAAQd,GAGpB,OAFAc,EAAQd,GAAKc,EAAQA,EAAQnB,OAAS,GACtCmB,EAAQI,MACDD,GAGPE,EAASH,EADDF,EAAQM,QAAO,SAACC,EAAKC,EAAMC,GAAZ,OAAoBT,EAAQO,GAAKhB,OAASiB,EAAKjB,OAASgB,EAAME,IAAK,IAEvFT,EAAQnB,OAAS,GAAG,CAGvB,IAFA,IAAI4B,EAAM,EACNb,EAAMS,EAAOf,OAAOK,IAAIK,EAAQ,GAAGV,QAAQT,SAAWmB,EAAQ,GAAGT,OAC5DL,EAAI,EAAGA,EAAIc,EAAQnB,SAAUK,EAAG,CACrC,IAAMwB,EAAIL,EAAOf,OAAOK,IAAIK,EAAQd,GAAGI,QAAQT,SAAWmB,EAAQd,GAAGK,OACjEmB,EAAId,IACJA,EAAMc,EACND,EAAMvB,GAGdmB,EAAShB,EAAOY,cAAcI,EAAQH,EAASO,IAEnD,OAAOJ,OA5CvB,KAAahB,EAOOsB,KAAO,IAAItB,EAAOrB,EAAKM,KAAM,GA0C1C,IAAMsC,EAAb,WAMI,WAAYC,EAAeC,GACvB,GADuC,yBALlCD,WAKiC,OAJjCC,WAIiC,EAClCD,EAAQC,EAAO,KAAM,mBACzB/C,KAAK8C,MAAQA,EACb9C,KAAK+C,MAAQA,EATrB,qDAGeD,EAAeC,GACtB,OAAOD,GAASC,EAAQ,IAAIF,EAASC,EAAOC,QAASC,MAJ7D,2CAYQ,OAAOhD,KAAK+C,MAAQ/C,KAAK8C,QAZjC,6BAeQ,OAAQ9C,KAAK8C,MAAQ9C,KAAK+C,OAAS,MAf3C,KAAaF,EAiBOD,KAAO,IAAIC,EAAS,EAAG,GAjB9BA,EAkBOI,SAAW,IAAIJ,EAASK,OAAOC,kBAAmBD,OAAOE,mBAGtE,IAAMC,EAAb,iDACYP,MAAgBI,OAAOE,kBADnC,KAEYL,MAAgBG,OAAOC,kBAFnC,gDAGQrD,GACIA,EAAIE,KAAK8C,QAAO9C,KAAK8C,MAAQhD,GAC7BA,EAAIE,KAAK+C,QAAO/C,KAAK+C,MAAQjD,KALzC,8BAQQ,OAAO+C,EAASS,IAAItD,KAAK8C,MAAO9C,KAAK+C,WAR7C,KAYaQ,EAAb,WAGI,WAAYzD,EAAaC,GAAc,yBAF9BD,OAE6B,OAD7BC,OAC6B,EAClCC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EALjB,qDAwBQ,MAAO,CAACC,KAAKwD,GAAIxD,KAAKyD,GAAIzD,KAAK0D,GAAI1D,KAAK2D,MAxBhD,mCA2BQ,MAAO,CAAC3D,KAAKwD,GAAIxD,KAAKyD,GAAIzD,KAAK2D,GAAI3D,KAAK0D,MA3BhD,yBAUqB,OAAO,IAAI7D,EAAKG,KAAKF,EAAEgD,MAAO9C,KAAKD,EAAE+C,SAV1D,yBAWqB,OAAO,IAAIjD,EAAKG,KAAKF,EAAEiD,MAAO/C,KAAKD,EAAE+C,SAX1D,yBAYqB,OAAO,IAAIjD,EAAKG,KAAKF,EAAEgD,MAAO9C,KAAKD,EAAEgD,SAZ1D,yBAaqB,OAAO,IAAIlD,EAAKG,KAAKF,EAAEiD,MAAO/C,KAAKD,EAAEgD,SAb1D,4BAeQ,OAAO/C,KAAKwD,KAfpB,4BAkBQ,OAAOxD,KAAK2D,KAlBpB,6BAqBQ,OAAO,IAAI9D,EAAKG,KAAKF,EAAEyB,OAAQvB,KAAKD,EAAEwB,WArB9C,2BAOezB,EAAcC,GACrB,OAAQD,GAAKC,EAAK,IAAIwD,EAAKzD,EAAGC,QAAKiD,MAR3C,KAAaO,EA6BOX,KAAO,IAAIW,EAAKV,EAASD,KAAMC,EAASD,MAGrD,IAAMgB,EAAb,WAII,WAAY9D,EAAaC,EAAaW,GAAc,yBAH3CZ,OAG0C,OAF1CC,OAE0C,OAD1CW,OAC0C,EAC/CV,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EACTC,KAAKU,EAAIA,EAPjB,6DAsBQ,IAAMa,EAASvB,KAAKuB,OACdC,EAASxB,KAAK+C,MAAMnB,IAAIL,GAAQT,SACtC,OAAO,IAAIQ,EAAOC,EAAQC,KAxBlC,4BAaQ,OAAO,IAAIvB,EAAKD,KAAKF,EAAEgD,MAAO9C,KAAKD,EAAE+C,MAAO9C,KAAKU,EAAEoC,SAb3D,4BAgBQ,OAAO,IAAI7C,EAAKD,KAAKF,EAAEiD,MAAO/C,KAAKD,EAAEgD,MAAO/C,KAAKU,EAAEqC,SAhB3D,6BAmBQ,OAAO,IAAI9C,EAAKD,KAAKF,EAAEyB,OAAQvB,KAAKD,EAAEwB,OAAQvB,KAAKU,EAAEa,WAnB7D,2BASezB,EAAcC,EAAcW,GACnC,OAAQZ,GAAKC,GAAKW,EAAK,IAAIkD,EAAK9D,EAAGC,EAAGW,QAAKsC,IAVnD,iCA0BsBa,GAEd,IADA,IAAMC,EAAU,IAAIC,EACX5C,EAAI,EAAGA,EAAI0C,EAAO/C,OAAQK,GAAK,EACpC2C,EAAQ/B,IAAI8B,EAAO1C,EAAI,GAAI0C,EAAO1C,EAAI,GAAI0C,EAAO1C,EAAI,IAEzD,OAAO2C,EAAQE,YA/BvB,KAmCaD,EAAb,iDACqBjE,EAAI,IAAIuD,EAD7B,KAEqBtD,EAAI,IAAIsD,EAF7B,KAGqB3C,EAAI,IAAI2C,EAH7B,gDAMQvD,EAAkBC,EAAYW,GACb,kBAANZ,GACPE,KAAKF,EAAEiC,IAAIjC,GACXE,KAAKD,EAAEgC,IAAIhC,GAAK,GAChBC,KAAKU,EAAEqB,IAAIrB,GAAK,KAEhBV,KAAKF,EAAEiC,IAAIjC,EAAEA,GACbE,KAAKD,EAAEgC,IAAIjC,EAAEC,GACbC,KAAKU,EAAEqB,IAAIjC,EAAEY,MAdzB,8BAkBQ,OAAOkD,EAAKN,IAAItD,KAAKF,EAAEkE,QAAShE,KAAKD,EAAEiE,QAAShE,KAAKU,EAAEsD,aAlB/D,KAsBaC,EAIT,WAAYC,EAAUC,EAAUC,GAAW,yBAHlCF,QAGiC,OAFjCC,QAEiC,OADjCC,QACiC,EACtCpE,KAAKkE,GAAKA,EACVlE,KAAKmE,GAAKA,EACVnE,KAAKoE,GAAKA,GAILC,EAAb,WAKI,WAAYC,EAAWxE,EAAWC,EAAWW,GAAY,yBAJhD4D,OAI+C,OAH/CxE,OAG+C,OAF/CC,OAE+C,OAD/CW,OAC+C,EACpDV,KAAKsE,EAAIA,EACTtE,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EACTC,KAAKU,EAAIA,EATjB,oDAYQ,OAAO,IAAI2D,EAAWrE,KAAKsE,EAAGtE,KAAKF,EAAGE,KAAKD,EAAGC,KAAKU,KAZ3D,kCAeQ,OAAO,IAAI2D,EAAWrE,KAAKsE,GAAItE,KAAKF,GAAIE,KAAKD,GAAIC,KAAKU,KAf9D,0BAiBQ6D,GACA,OAAO,IAAIF,EACPrE,KAAKsE,EAAIC,EAAED,EAAItE,KAAKF,EAAIyE,EAAEzE,EAAIE,KAAKD,EAAIwE,EAAExE,EAAIC,KAAKU,EAAI6D,EAAE7D,EACxDV,KAAKsE,EAAIC,EAAEzE,EAAIE,KAAKF,EAAIyE,EAAED,EAAItE,KAAKD,EAAIwE,EAAE7D,EAAIV,KAAKU,EAAI6D,EAAExE,EACxDC,KAAKsE,EAAIC,EAAExE,EAAIC,KAAKF,EAAIyE,EAAE7D,EAAIV,KAAKD,EAAIwE,EAAED,EAAItE,KAAKU,EAAI6D,EAAEzE,EACxDE,KAAKsE,EAAIC,EAAE7D,EAAIV,KAAKF,EAAIyE,EAAExE,EAAIC,KAAKD,EAAIwE,EAAEzE,EAAIE,KAAKU,EAAI6D,EAAED,OAtBpE,KAAaD,EAwBOzB,KAAO,IAAIyB,EAAW,EAAG,EAAG,EAAG,GAG5C,IAAMG,EAAb,WAEI,WAAYD,GAAgB,yBADXA,OACU,EACvBvE,KAAKuE,EAAIA,EAHjB,oDAgBQ,OAAO,IAAIC,EAASxE,KAAKuE,EAAEE,WAhBnC,gCAkBcC,GACN,IAAMH,EAAIvE,KAAKuE,EAAEvC,IAAI,IAAIqC,EAAW,EAAGK,EAAE5E,EAAG4E,EAAE3E,EAAG2E,EAAEhE,IAAIsB,IAAIhC,KAAKuE,EAAEI,aAClE,OAAO,IAAI1E,EAAKsE,EAAEzE,EAAGyE,EAAExE,EAAGwE,EAAE7D,KApBpC,gCAuBQ,OAAO,IAAI8D,EAASxE,KAAKuE,EAAEI,eAvBnC,0BAyBQC,GACA,OAAO,IAAIJ,EAASxE,KAAKuE,EAAEvC,IAAI4C,EAAEL,MA1BzC,iCA6BQ,IAAMA,EAAIvE,KAAKuE,EAETM,EAAKN,EAAED,EAAIC,EAAED,EACbQ,EAAKP,EAAEzE,EAAIyE,EAAEzE,EACbiF,EAAKR,EAAExE,EAAIwE,EAAExE,EACbiF,EAAKT,EAAE7D,EAAI6D,EAAE7D,EAEbuE,EAAKV,EAAED,EAAIC,EAAEzE,EACboF,EAAKX,EAAED,EAAIC,EAAExE,EACboF,EAAKZ,EAAED,EAAIC,EAAE7D,EAEb0E,EAAKb,EAAEzE,EAAIyE,EAAExE,EACbsF,EAAKd,EAAExE,EAAIwE,EAAE7D,EACb4E,EAAKf,EAAE7D,EAAI6D,EAAEzE,EAEnB,OAAO,IAAIc,EAAQ,CACfiE,EAAKC,EAAKC,EAAKC,EAAI,GAAKI,EAAKD,GAAK,GAAKG,EAAKJ,GAAK,EACjD,GAAKE,EAAKD,GAAKN,EAAKC,EAAKC,EAAKC,EAAI,GAAKK,EAAKJ,GAAK,EACjD,GAAKK,EAAKJ,GAAK,GAAKG,EAAKJ,GAAKJ,EAAKC,EAAKC,EAAKC,EAAI,EACjD,EAAG,EAAG,EAAG,MAhDrB,wBAYc,OAAOhF,KAAKuF,UAAUtF,EAAKO,MAZzC,wBAac,OAAOR,KAAKuF,UAAUtF,EAAKQ,MAbzC,wBAcc,OAAOT,KAAKuF,UAAUtF,EAAKU,OAdzC,8BAKkB6E,EAAYC,GACtB,IAAIxE,EAAIf,KAAKwF,IAAI,GAAMD,GACnBE,EAAIzF,KAAK0F,IAAI,GAAMH,GAAUD,EAAK1E,SAEtC,OADK+E,SAASF,KAAIA,EAAI,GACf,IAAInB,EAAS,IAAIH,EAAWpD,EAAG0E,EAAIH,EAAK1F,EAAG6F,EAAIH,EAAKzF,EAAG4F,EAAIH,EAAK9E,QAT/E,KAAa8D,EAWO5B,KAAO,IAAI4B,EAASH,EAAWzB,MA0C5C,IAAMkD,EAAb,WAGI,WAAYlB,EAAa9C,GAAU,yBAF1B8C,OAEyB,OADzB9C,OACyB,EAC9B9B,KAAK4E,EAAIA,EACT5E,KAAK8B,EAAIA,EALjB,oDASQ,OAAO,IAAIgE,EAAW9F,KAAK4E,EAAEH,QAASzE,KAAK8B,EAAE2C,WATrD,gCAWcC,GACN,OAAO1E,KAAK4E,EAAEW,UAAUb,GAAG3C,IAAI/B,KAAK8B,KAZ5C,gCAeQ,IAAM8C,EAAI5E,KAAK4E,EAAEmB,UACX1F,EAAIuE,EAAEW,UAAUvF,KAAK8B,GAAGkE,MAC9B,OAAO,IAAIF,EAAWlB,EAAGvE,KAjBjC,iCAoBQ,IAAI4F,EAAMjG,KAAK4E,EAAEsB,WAIjB,OAHAD,EAAIE,MAAM,IAAMnG,KAAK8B,EAAEhC,EACvBmG,EAAIE,MAAM,IAAMnG,KAAK8B,EAAE/B,EACvBkG,EAAIE,MAAM,IAAMnG,KAAK8B,EAAEpB,EAChBuF,MAxBf,KAAaH,EAOOlD,KAAO,IAAIkD,EAAWtB,EAAS5B,KAAM3C,EAAKM,M,YCxXjD6F,EAAb,WAqBI,WAAYC,GAA4B,yBANvBA,QAMsB,OALtBC,aAKsB,OAJtBC,iBAIsB,OAHtBC,wBAGsB,OAFtBC,mBAEsB,OADtBC,cACsB,EACnC1G,KAAKqG,GAAKA,EACVrG,KAAKsG,QAAUK,EAAqBN,EAAID,EAAcQ,GAAIR,EAAcS,IACxE7G,KAAKuG,YAAcF,EAAGS,kBAAkB9G,KAAKsG,QAAS,YACtDtG,KAAKwG,mBAAqBH,EAAGU,mBAAmB/G,KAAKsG,QAAS,mBAC9DtG,KAAKyG,cAAgBJ,EAAGU,mBAAmB/G,KAAKsG,QAAS,cACzDtG,KAAK0G,SAAWL,EAAGU,mBAAmB/G,KAAKsG,QAAS,SA3B5D,iDA6BSU,EAA6BC,EAA0BC,EAAcC,GACtE,GAAIH,EAAGX,KAAOrG,KAAKqG,IAAMY,EAAOZ,KAAOrG,KAAKqG,GAAI,MAAM,IAAItF,MAAM,gDAChE,IAAMsF,EAAKW,EAAGX,GACdA,EAAGe,WAAWpH,KAAKsG,SACnBD,EAAGgB,UAAUrH,KAAK0G,SAAUS,EAAQvC,EAAGuC,EAAQG,EAAGH,EAAQI,GAC1DP,EAAGQ,yBAAyBxH,KAAKwG,oBACjCQ,EAAGS,0BAA0BzH,KAAKyG,eAClCQ,EAAOS,aAAa1H,KAAKuG,aACzBF,EAAGsB,WAAWT,EAAM,EAAGD,EAAOW,iBArCtC,KAAaxB,EACOyB,IAAMlB,GAAmB,SAACN,GAAD,OAA+B,IAAID,EAAcC,MADjFD,EAEeQ,G,4LAFfR,EASeS,G,+HAoCtBiB,E,WAOF,WAAsBzB,EAA2B0B,EAAcC,GAAe,yBANrE3B,QAMoE,OALpEC,aAKoE,OAJ5DC,iBAI4D,OAH5D0B,eAG4D,OAF5DzB,wBAE4D,OAD5DC,mBAC4D,EACzEzG,KAAKqG,GAAKA,EACVrG,KAAKsG,QAAUK,EAAqBN,EAAI0B,EAAMC,GAC9ChI,KAAKuG,YAAcF,EAAGS,kBAAkB9G,KAAKsG,QAAS,YACtDtG,KAAKiI,UAAY5B,EAAGS,kBAAkB9G,KAAKsG,QAAS,UACpDtG,KAAKwG,mBAAqBH,EAAGU,mBAAmB/G,KAAKsG,QAAS,mBAC9DtG,KAAKyG,cAAgBJ,EAAGU,mBAAmB/G,KAAKsG,QAAS,c,iDAExDU,EAA6BC,EAAgCC,GAC9D,GAAIF,EAAGX,KAAOrG,KAAKqG,IAAMY,EAAOZ,KAAOrG,KAAKqG,GAAI,MAAM,IAAItF,MAAM,iCAChE,IAAMsF,EAAKW,EAAGX,GACdA,EAAGe,WAAWpH,KAAKsG,SACnBU,EAAGQ,yBAAyBxH,KAAKwG,oBACjCQ,EAAGS,0BAA0BzH,KAAKyG,eAClCQ,EAAOS,aAAa1H,KAAKuG,aACzBU,EAAOiB,cAAclI,KAAKiI,WAC1B5B,EAAGsB,WAAWT,EAAM,EAAGD,EAAOW,iB,KAKhCO,E,kCAAAA,EACcvB,G,0WADduB,EAccC,I,mWAeb,IAAMC,EAAb,YAyCI,WAAoBhC,GAA4B,IAAD,6BAC3C,ECwND,SAAkBA,GACrB,OAAQA,EAAGiC,aAAajC,EAAGkC,SAAoBC,WAAW,aDzNtD7B,CAAgBN,GAAhB,0CACUA,EAAI8B,EAAmBC,IAAKC,EAAoBI,MAD1D,0CAEUpC,EAAI8B,EAAmBvB,GAAIyB,EAAoBxB,KAHd,eAzCnD,2BAAyCiB,GAA5BO,EACOR,IAAMlB,GAAmB,SAACN,GAAD,OAA+B,IAAIgC,EAAoBhC,MADvFgC,EAEOxB,G,woBAFPwB,EAqBOI,I,2pBA2Bb,IAAMC,EAAb,YAsBI,WAAoBrC,GAA4B,qEACtCA,EAAI8B,EAAmBC,IAAKM,EAAmBD,MAvB7D,2BAAwCX,GAA3BY,EACOb,IAAMlB,GAAmB,SAACN,GAAD,OAA+B,IAAIqC,EAAmBrC,MADtFqC,EAEeD,I,0sBAyBrB,IAAME,EAAb,YAkEI,WAAoBtC,GAA4B,qEACtCA,EAAIsC,EAAoBP,IAAKO,EAAoBF,MAnE/D,2BAAyCX,GAA5Ba,EACOd,IAAMlB,GAAmB,SAACN,GAAD,OAA+B,IAAIsC,EAAoBtC,MADvFsC,EAEOP,I,0gCAFPO,EAmCeF,I,qhCAoCrB,IAAMG,EAAb,YAuBI,WAAoBvC,GAA4B,IAAD,uBAC3C,4CAAMA,EAAIuC,EAAsBR,IAAKC,EAAoBI,OAJ5CI,gBAG8B,IAF9BC,kBAE8B,IADvCC,QAAkB,EAGtB,EAAKF,WAAaxC,EAAGU,mBAAmB,EAAKT,QAAS,WACtD,EAAKwC,aAAezC,EAAGU,mBAAmB,EAAKT,QAAS,aAHb,OAK3C0C,aAAY,WAAQ,EAAKD,SAAWE,MADzB,IAJgC,EAvBnD,kEA8BSjC,EAA6BC,EAAgCC,GAC9D,GAAIF,EAAGX,KAAOrG,KAAKqG,IAAMY,EAAOZ,KAAOrG,KAAKqG,GAAI,MAAM,IAAItF,MAAM,iCAChE,IAAMsF,EAAKW,EAAGX,GACdA,EAAGe,WAAWpH,KAAKsG,SACnBD,EAAG6C,UAAUlJ,KAAK6I,WAAY7I,KAAK+I,SACnC1C,EAAG6C,UAAUlJ,KAAK8I,aAAc,GAChC,4DAAW9B,EAAIC,EAAQC,OApC/B,GAA2CY,GAA9Bc,EACOf,IAAMlB,GAAmB,SAACN,GAAD,OAA+B,IAAIuC,EAAsBvC,MADzFuC,EAEOR,I,skBAsCb,IAAMe,EAAb,WAKI,WAAY9C,EAA2BY,EAA0BC,EAAckC,GAAiB,yBAJ/E9C,aAI8E,OAH9EW,YAG8E,OAF9EmC,YAE8E,OAD9ElC,UAC8E,EAC3FlH,KAAKsG,QAAUF,EAAcyB,IAAIxB,GACjCrG,KAAKiH,OAASA,EACdjH,KAAKoJ,OAASA,EACdpJ,KAAKkH,KAAOA,EATpB,sDAYQlH,KAAKiH,OAAOoC,YAZpB,2BAcSrC,GACDhH,KAAKsG,QAAQgD,KAAKtC,EAAIhH,KAAKiH,OAAQjH,KAAKkH,KAAM,IAAIP,EAAc,EAAG,EAAG,MAf9E,uCAiBqBK,EAA6BuC,GAC1CvJ,KAAKsG,QAAQgD,KAAKtC,EAAIhH,KAAKiH,OAAQjH,KAAKkH,KAAMqC,EAAQC,YAAYxJ,KAAKoJ,aAlB/E,KAsBaK,EAAb,WAWI,WAAYpD,EAA2BY,EAAgCC,EAAckC,GAAiB,yBALrFM,qBAKoF,OAJpFC,sBAIoF,OAHpF1C,YAGoF,OAFpFmC,YAEoF,OADpFlC,UACoF,EAEjGlH,KAAK0J,gBAAkB,CACnBrB,EAAoBR,IAAIxB,GACxBqC,EAAmBb,IAAIxB,GACvBsC,EAAoBd,IAAIxB,GACxBuC,EAAsBf,IAAIxB,IAE9BrG,KAAK2J,iBAAmBvD,EAAcyB,IAAIxB,GAC1CrG,KAAKiH,OAASA,EACdjH,KAAKoJ,OAASA,EACdpJ,KAAKkH,KAAOA,EAtBpB,uEAGUlH,KAAK4J,aAHf,+CAyBQ5J,KAAKiH,OAAOoC,YAzBpB,2BA2BSrC,GAED,IAAM7F,EAAIsI,EAAoBG,SAAW5J,KAAK0J,gBAAgB5I,OAC9Dd,KAAK0J,gBAAgBvI,GAAGmI,KAAKtC,EAAIhH,KAAKiH,OAAQjH,KAAKkH,QA9B3D,uCAgCqBF,EAA6BuC,GAC1CvJ,KAAK2J,iBAAiBL,KAAKtC,EAAIhH,KAAKiH,OAAQjH,KAAKkH,KAAMqC,EAAQC,YAAYxJ,KAAKoJ,aAjCxF,KAAaK,EACFG,SAAmB,ECxTvB,IAAMC,EAAb,WAII,WAAYjF,EAAW0C,EAAWC,GAAY,yBAHrC3C,OAGoC,OAFpC0C,OAEoC,OADpCC,OACoC,EACzCvH,KAAK4E,EAAIA,EACT5E,KAAKsH,EAAIA,EACTtH,KAAKuH,EAAIA,EAPjB,mDAUQ,OAAO,IAAIsC,EACP7J,KAAK4E,EAAI,IACT5E,KAAKsH,EAAI,IACTtH,KAAKuH,EAAI,OAbrB,6BAgBQ,OAAO,IAAIsC,EACP3J,KAAK4J,MAAe,IAAT9J,KAAK4E,GAChB1E,KAAK4J,MAAe,IAAT9J,KAAKsH,GAChBpH,KAAK4J,MAAe,IAAT9J,KAAKuH,QAnB5B,KAgCawC,EAAb,WA0BI,WAAYC,EAAuBC,GAAgB,yBAFnDD,WAEkD,OADlDC,WACkD,EAC9CjK,KAAKgK,MAAQA,EACbhK,KAAKiK,MAAQA,EA5BrB,6DAC+BC,GACvB,IAAMjJ,EAAIiJ,EAAO3I,OACX+C,EAAI4F,EAAOpK,EAAEiD,MAAQ9B,EAAEnB,EACvBqK,EAAID,EAAOnK,EAAEgD,MAAQ9B,EAAElB,EACvBqK,EAAIF,EAAOxJ,EAAEqC,MAAQ9B,EAAEP,EAC7B,OAAO,IAAIiB,EAAY,CACnB,EAAI2C,EAAG,EAAG,EAAG,EACb,EAAG,EAAI6F,EAAG,EAAG,EACb,EAAG,EAAG,EAAIC,EAAG,GACZnJ,EAAEnB,EAAIwE,GAAIrD,EAAElB,EAAIoK,GAAIlJ,EAAEP,EAAI0J,EAAG,MAV1C,qCAakCC,EAAqBJ,EAAeK,EAAqBC,GAAoC,IAAD,EACtGD,EAAcC,EAC1B,CAACN,EAAOA,EAAQM,EAAeD,GAC/B,CAACL,EAAQK,EAAcC,EAAcN,GAH6E,mBAC/G3F,EAD+G,KAC5G6F,EAD4G,KAIhHD,EAAS,IAAIvI,EACf,IAAIA,GAAc2C,EAAGA,GACrB,IAAI3C,GAAcwI,EAAGA,GACrBE,GACJ,OAAOrK,KAAKwK,YAAYN,OArBhC,yCA8BQO,GACAzK,KAAKgK,MAAQ,IAAIrI,EAAe3B,KAAKgK,MAAMpF,EAAG6F,EAAMlJ,QACpDvB,KAAKiK,MAAQQ,EAAMjJ,SAhC3B,mCAkCiBiJ,EAAmBH,EAAqBC,GACjD,IAAMG,EAAM1K,KAAKgK,MAAMjE,UACjB4E,EAAUD,EAAInF,UAAUkF,EAAMlJ,QAAQb,EAI5C,MAAO,CAHYqJ,EAAOa,eACtB,IAAIjJ,EAAagJ,EAAUF,EAAMjJ,OAAQmJ,EAAUF,EAAMjJ,QACzDxB,KAAKiK,MAAOK,EAAaC,GACTG,EAAIxE,gBAxChC,KA4Ca2E,EAAb,iDACqBC,QAAoB,GADzC,wDAEgBC,GAER,OADA/K,KAAK8K,QAAQE,KAAKD,GACXF,EAAiBI,gBAAgBjL,KAAK8K,QAAQhK,QAAQoK,SAJrE,gCAMcC,GACN,IAAMhK,EAAI0J,EAAiBO,kBAAkBD,GAC7C,OAAO,EAAIhK,GAAKA,GAAKnB,KAAK8K,QAAQhK,OAASd,KAAK8K,QAAQ3J,EAAI,GAAK,QARzE,uCAUmCkK,GAC3B,OAAO,IAAIxB,EACPwB,EAAI,IACJnL,KAAKoL,MAAMD,EAAI,KAAS,IACxBnL,KAAKoL,MAAMD,EAAI,OAAW,OAdtC,wCAgBqCF,GAC7B,OAAOA,EAAQvG,EAAgB,IAAZuG,EAAQ7D,EAAwB,MAAZ6D,EAAQ5D,MAjBvD,KAqBMgE,E,WASF,WAAYlF,EAA2BmF,GAAkD,yBARxEnF,QAQuE,OAPvEmF,gBAOuE,OANvEC,QAMuE,OALvEC,cAKuE,OAJvEC,cAIuE,OAHhFrB,aAAuB,EAGyD,KAFhFC,cAAwB,EAEwD,KADhFhB,QAAmC,KAEvCvJ,KAAKqG,GAAKA,EACVrG,KAAKwL,WAAaA,EAClBxL,KAAKyL,GAAKpF,EAAGuF,oBACb5L,KAAK0L,SAAWrF,EAAGwF,qBACnB7L,KAAK2L,SAAWtF,EAAGyF,gBACnBzF,EAAG0F,gBAAgB1F,EAAG2F,YAAahM,KAAKyL,IAGxCpF,EAAG4F,iBAAiB5F,EAAG6F,aAAclM,KAAK0L,UAC1CrF,EAAG8F,wBAAwB9F,EAAG2F,YAAa3F,EAAG+F,iBAAkB/F,EAAG6F,aAAclM,KAAK0L,UACtFrF,EAAG4F,iBAAiB5F,EAAG6F,aAAc,MAGrC7F,EAAGgG,YAAYhG,EAAGiG,WAAYtM,KAAK2L,UACnCtF,EAAGkG,cAAclG,EAAGiG,WAAYjG,EAAGmG,mBAAoBnG,EAAGoG,SAC1DpG,EAAGkG,cAAclG,EAAGiG,WAAYjG,EAAGqG,mBAAoBrG,EAAGoG,SAC1DpG,EAAGsG,qBAAqBtG,EAAG2F,YAAa3F,EAAGuG,kBAAmBvG,EAAGiG,WAAYtM,KAAK2L,SAAU,GAC5FtF,EAAGgG,YAAYhG,EAAGiG,WAAY,MAE9BjG,EAAG0F,gBAAgB1F,EAAG2F,YAAa,M,sDAGnChM,KAAKqG,GAAGwG,kBAAkB7M,KAAKyL,IAC/BzL,KAAKqG,GAAGyG,mBAAmB9M,KAAK0L,UAChC1L,KAAKqG,GAAG0G,cAAc/M,KAAK2L,Y,qCAG3B3L,KAAKuJ,QAAU,O,6BAEZzJ,EAAWC,EAAWiN,EAAeC,GACxC,IAAM5G,EAAKrG,KAAKqG,GAChBA,EAAG0F,gBAAgB1F,EAAG2F,YAAahM,KAAKyL,IACpCuB,IAAUhN,KAAKsK,aAAe2C,IAAWjN,KAAKuK,eAC9C2C,QAAQC,IAAI,oCACZnN,KAAKuJ,QAAU,KACfvJ,KAAKsK,YAAc0C,EACnBhN,KAAKuK,aAAe0C,EAEpB5G,EAAG4F,iBAAiB5F,EAAG6F,aAAclM,KAAK0L,UAC1CrF,EAAG+G,oBAAoB/G,EAAG6F,aAAc7F,EAAGgH,kBAAmBL,EAAOC,GACrE5G,EAAG4F,iBAAiB5F,EAAG6F,aAAc,MAErC7F,EAAGgG,YAAYhG,EAAGiG,WAAYtM,KAAK2L,UACnCtF,EAAGiH,WAAWjH,EAAGiG,WAAY,EAAGjG,EAAGkH,IAAKP,EAAOC,EAAQ,EAAG5G,EAAGkH,IAAKlH,EAAGmH,cAAe,MACpFnH,EAAGgG,YAAYhG,EAAGiG,WAAY,MAE9BjG,EAAGoH,SAAS,EAAG,EAAGT,EAAOC,IAER,OAAjBjN,KAAKuJ,UACL2D,QAAQC,IAAI,wBACZnN,KAAKuJ,QAAUvJ,KAAK0N,UAExB,IAAIC,EAAS,IAAIC,WAAW,GAC5BvH,EAAGwH,WAAW/N,EAAGE,KAAKuK,aAAexK,EAAG,EAAG,EAAGsG,EAAGkH,IAAKlH,EAAGmH,cAAeG,GACxE,IAAIG,EAAQ,IAAIjE,EAAO8D,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAGpD,OAFAtH,EAAG0F,gBAAgB1F,EAAG2F,YAAa,MAE5BhM,KAAKuJ,QAAQwE,UAAUD,K,+BAG9B,IAAMvE,EAAU,IAAIsB,EAKpB,OAJA7K,KAAKqG,GAAG2H,WAAW,EAAK,EAAK,EAAK,GAClChO,KAAKqG,GAAG4H,MAAMjO,KAAKqG,GAAG6H,iBAAmBlO,KAAKqG,GAAG8H,kBACjDnO,KAAKwL,WAAWjC,GAChBvJ,KAAKqG,GAAG+H,QACD7E,M,KAkBT8E,E,WAEF,aAAqC,IAAzBC,EAAwB,uDAAJ,GAAI,yBAD3BA,WAC2B,EAChCtO,KAAKsO,MAAQA,E,sDAEN,IAAD,uBACN,YAActO,KAAKsO,MAAnB,wDAA4BjF,WADtB,qF,2BAGLrC,GAAuB,IAAD,uBACvB,YAAchH,KAAKsO,MAAnB,wDAA4BhF,KAAKtC,IADV,qF,uCAGVA,EAAsBuC,GAA4B,IAAD,uBAC9D,YAAcvJ,KAAKsO,MAAnB,wDAA4BC,iBAAiBvH,EAAIuC,IADa,uF,KAKzDiF,EAAb,iDACYC,MAA0B,GADtC,KAEYhE,MAA2B,KAFvC,KAGYiE,OAA8B,KAH1C,sDAIcrI,GAIN,OAHoB,OAAhBrG,KAAK0O,SACL1O,KAAK0O,OAAS,IAAIL,EAAarO,KAAKyO,MAAME,KAAI,SAAA7O,GAAC,OAAIA,EAAE8O,UAAUvI,QAE5DrG,KAAK0O,SARpB,uCAWQ,GAAmB,OAAf1O,KAAKyK,MAAgB,CACrB,IAAMxI,EAAUjC,KAAKyO,MAAME,KAAI,SAAAE,GAAI,OAAIA,EAAKC,oBAAkBC,QAAO,SAAApJ,GAAC,YAAU3C,IAAN2C,KAAiBgJ,KAAI,SAAAhJ,GAAC,OAAIA,KACpG3F,KAAKyK,MAA2B,IAAnBxI,EAAQnB,OAAea,EAAWiB,KAAOjB,EAAWqN,gBAAgB/M,GAErF,OAAOjC,KAAKyK,QAfpB,8BAoBYtJ,GACJ,OAAOnB,KAAKyO,MAAMtN,KArB1B,+BAuBasN,GACLzO,KAAKyO,MAAQA,EACbzO,KAAKyK,MAAQ,KACbzK,KAAK0O,OAAS,OA1BtB,mCA6BQ1O,KAAKiP,SAAS,MA7BtB,8BA+BYJ,GACJ7O,KAAKyO,MAAMzD,KAAK6D,GAChB7O,KAAKyK,MAAQ,KACbzK,KAAK0O,OAAS,OAlCtB,gCAkBQ,OAAO1O,KAAKyO,MAAM3N,WAlB1B,KAsCaoO,EAAb,WAMI,WAAYC,EAA2BC,EAAoBC,EAAwBC,GAAsC,IAAD,kCAL/GH,YAK+G,OAJ/G9I,QAI+G,OAH/GkJ,OAAS,IAAIxF,EAAOpI,EAAeiB,KAAM,GAGsE,KAF/GyM,gBAE+G,OADvGG,kBACuG,EACpH,IAAMnJ,EAAK8I,EAAOM,WAAWL,EAAY,SAAW,SACpDpP,KAAKmP,OAASA,EACdnP,KAAKqG,GAAKA,EACVrG,KAAKqP,WAAaA,EAClBrP,KAAKwP,aAAe,IAAIjE,EAAgBlF,GAAI,SAACkD,GACzC,IAAMvC,EAAK,EAAK0I,gBAChB,EAAKL,WAAWT,UAAU,EAAKvI,IAAIkI,iBAAiBvH,EAAIuC,MAGxD+F,GAEAtG,aAAY,WAAQ,EAAK0E,WAAY4B,GAKzCjJ,EAAGsJ,WAAW,GACdtJ,EAAGuJ,OAAOvJ,EAAGwJ,YACbxJ,EAAGyJ,UAAUzJ,EAAG0J,SAEhBZ,EAAOa,cAAgB,WAAc,OAAO,GAC5Cb,EAAOc,iBAAiB,aAAa,SAAAC,GACjC,GAAiB,IAAbA,EAAEC,OAAN,CACA,IAAMlG,EAAQ,EAAKsF,OAAOtF,MACpBD,EAAQ,EAAKuF,OAAOvF,MACpBoG,EAAiB,EAAKA,iBAJU,EAKrB,CAACF,EAAEG,QAASH,EAAEI,SAAxBC,EAL+B,KAK3BC,EAL2B,KAMhCC,EAAc,SAACP,GACjB,IAAMQ,EAAKR,EAAEG,QAAUE,EACjBI,EAAKT,EAAEI,QAAUE,EACjBI,EAAO5G,EAAMpF,EAAEW,UAAU,IAAI5D,EAASyO,EAAiBM,GAAKN,EAAiBO,EAAI,IACvF,GAAIT,EAAEW,SACF,EAAKtB,OAAOvF,MAAQ,IAAIrI,EAAe,EAAK4N,OAAOvF,MAAMpF,EAAGoF,EAAMlI,EAAEF,IAAIgP,SAEvE,GAAIV,EAAEY,QAAS,CAChB,IAAM/Q,EAAIG,KAAK6Q,IAAIJ,GAAM,GACnBK,EAASL,EAAK,EAAI,GAAO,EAAI5Q,GAAK,EAAIA,EAC5C,EAAKwP,OAAOtF,MAAQ+G,EAAS/G,MAE5B,CACD,IAAMzE,EAAOoL,EAAKK,MAAMjH,EAAMpF,EAAEyG,GAC1B5F,EAASmL,EAAK9P,SAAW,EAAKyO,OAAOtF,MAC3C,EAAKsF,OAAOvF,MAAQ,IAAIrI,EAAeA,EAAauP,OAAO1L,EAAMC,GAAQzD,IAAIgI,EAAMpF,GAAI,EAAK2K,OAAOvF,MAAMlI,GAE7G,EAAK4L,UAMTyD,SAASlB,iBAAiB,YAAaQ,GACvCU,SAASlB,iBAAiB,WALR,SAAZmB,EAAalB,GACfiB,SAASE,oBAAoB,YAAaZ,GAC1CU,SAASE,oBAAoB,UAAWD,UAKhDjC,EAAOc,iBAAiB,SAAS,SAAAC,GAC7B,IAAMnQ,EAAI,GAAMG,KAAK6Q,IAAIb,EAAEoB,QAAU,IAC/BN,EAASd,EAAEoB,OAAS,EAAI,GAAK,EAAIvR,GAAK,EAAIA,EAChD,EAAKwP,OAAOtF,OAAS+G,EACrB,EAAKtD,YAETyB,EAAOc,iBAAiB,aAAa,SAAAC,GACjC,GAAiB,IAAbA,EAAEC,OAAN,CACA,IAAMpF,EAAM,EAAKyE,aAAa+B,OAAOrB,EAAEG,QAASH,EAAEI,QAAS,EAAKnB,OAAOnC,MAAO,EAAKmC,OAAOlC,QAC1FC,QAAQC,IAAIpC,OAEhB,UAAAoE,EAAOqC,qBAAP,SAAsBvB,iBAAiB,WAAW,SAAAC,GAChC,MAAVA,EAAEuB,MACFC,EAA4BC,oBAC5B,EAAKjE,aA1ErB,kDA+EQ1N,KAAKuP,OAAOqC,IAAI5R,KAAKqP,WAAWP,oBA/ExC,+BAkFQ,IAAM9H,EAAKhH,KAAK0P,gBAChB1P,KAAKqG,GAAG2H,WAAW,GAAK,GAAK,GAAK,GAClChO,KAAKqG,GAAG4H,MAAMjO,KAAKqG,GAAG6H,iBAAmBlO,KAAKqG,GAAG8H,kBACjDnO,KAAKqP,WAAWT,UAAU5O,KAAKqG,IAAIiD,KAAKtC,GACxChH,KAAKwP,aAAaqC,iBAtF1B,sCAyF+C,IAAD,SACL7R,KAAKuP,OAAOuC,aACzC9R,KAAKqP,WAAWP,iBAAkB9O,KAAKmP,OAAOnC,MAAOhN,KAAKmP,OAAOlC,QAF/B,mBAC/B8E,EAD+B,KACnBC,EADmB,KAGtC,MAAO,CACH3L,GAAIrG,KAAKqG,GACTiE,YAAatK,KAAKmP,OAAOnC,MACzBzC,aAAcvK,KAAKmP,OAAOlC,OAC1BsC,OAAQvP,KAAKuP,OACb9H,0BAA2B,SAAAwK,GAAQ,OAAI,EAAK5L,GAAG6L,iBAAiBD,GAAU,EAAOF,EAAW5L,QAC5FqB,yBAA0B,SAAAyK,GAAQ,OAAI,EAAK5L,GAAG6L,iBAAiBD,GAAU,EAAOD,EAAW7L,WAlGvG,uCAsGQ,OAAO,EAAInG,KAAKuP,OAAOtF,MAAQ/J,KAAKiS,IAAInS,KAAKmP,OAAOnC,MAAOhN,KAAKmP,OAAOlC,UAtG/E,6BAwGWD,EAAeC,GAClBjN,KAAKmP,OAAOnC,MAAQA,EACpBhN,KAAKmP,OAAOlC,OAASA,EACrBjN,KAAKqG,GAAGoH,SAAS,EAAG,EAAGzN,KAAKmP,OAAOnC,MAAOhN,KAAKmP,OAAOlC,QACtDjN,KAAK0N,WA5Gb,uCA+GQ,IAAM0E,EAAOpS,KAAKmP,OAAOkD,wBACnBC,EAASF,EAAKG,KACpBvS,KAAKwS,OAAOC,OAAOC,WAAa,EAAIJ,EAAQG,OAAOE,YAAcP,EAAKQ,IAAMN,OAjHpF,KAyHO,SAASO,EAAYxM,EAA2ByM,EAAcC,GACjE,IAAMC,EAAS3M,EAAG4M,aAAaH,GAC/B,GAAc,MAAVE,EAAgB,MAAM,IAAIjS,MAAM,kBAGpC,GAFAsF,EAAG6M,aAAaF,EAAQD,GACxB1M,EAAG8M,cAAcH,IACZ3M,EAAG+M,mBAAmBJ,EAAQ3M,EAAGgN,gBAElC,MADAnG,QAAQC,IAAI9G,EAAGiN,iBAAiBN,IAC1B,IAAIjS,MAAM,iBAEpB,OAAOiS,EAGJ,SAASO,EAAclN,EAA2B0B,EAAcC,GACnE,IAAMwL,EAAUX,EAAYxM,EAAIA,EAAGoN,cAAe1L,GAC5C2L,EAAUb,EAAYxM,EAAIA,EAAGsN,gBAAiB3L,GAC9C1B,EAAUD,EAAGkN,gBACnB,GAAe,MAAXjN,EAAiB,MAAM,IAAIvF,MAAM,mBAIrC,GAHAsF,EAAGuN,aAAatN,EAASkN,GACzBnN,EAAGuN,aAAatN,EAASoN,GACzBrN,EAAGwN,YAAYvN,IACVD,EAAGyN,oBAAoBxN,EAASD,EAAG0N,aAEpC,MADA7G,QAAQC,IAAI9G,EAAG2N,kBAAkB1N,IAC3B,IAAIvF,MAAM,cAEpB,OAAOuF,EAGJ,SAAS2N,EAAoBC,GAahC,IAAMC,EAAmC,GACzC,OAAO,SAAC1C,GACJ,IAAIhP,EAAO0R,EAAMC,MAAK,SAAAtU,GAAC,OAAIA,EAAE2R,MAAQA,KAKrC,YAJazO,IAATP,IACAA,EAAO,CAAEgP,IAAKA,EAAK4C,MAAOH,EAAQzC,IAClC0C,EAAMnJ,KAAKvI,IAERA,EAAK4R,O,2BC/Yb,SAASC,EACZjO,EACAxC,GAEA,OAAO,IAAI0Q,EAAOlO,EAAIxC,GAyB1B,SAAS2Q,EAAanO,EAA2BoO,GAC7C,IAAMC,EAAMrO,EAAGmO,eAGf,OAFAnO,EAAGsO,WAAWtO,EAAGuO,aAAcF,GAC/BrO,EAAGwO,WAAWxO,EAAGuO,aAAcH,EAAMpO,EAAGyO,aACjCJ,E,IAGLH,E,WAIF,WAAYlO,EAA2BxC,GAAuB,yBAHrDwC,QAGoD,OAFpDxC,YAEoD,OADpD+D,iBACoD,EACzD5H,KAAKqG,GAAKA,EACVrG,KAAK6D,OAAS2Q,EAAanO,EAAIxC,GAC/B7D,KAAK4H,YAAc/D,EAAO/C,OAAS,E,sDAGnCd,KAAKqG,GAAG0O,aAAa/U,KAAK6D,U,mCAEjB0C,GACTvG,KAAKqG,GAAGsO,WAAW3U,KAAKqG,GAAGuO,aAAc5U,KAAK6D,QAC9C7D,KAAKqG,GAAG2O,wBAAwBzO,GAChCvG,KAAKqG,GAAG4O,oBAAoB1O,EAAa,EAAGvG,KAAKqG,GAAG6O,OAAO,EAAO,EAAG,O,KAgCvEC,E,WAIF,WAAY9O,EAA2B+O,GAA6B,yBAH3D/O,QAG0D,OAF1D+O,kBAE0D,OAD1DxN,iBAC0D,EAC/D5H,KAAKqG,GAAKA,EACVrG,KAAKoV,aAAeZ,EAAanO,EAAI+O,GACrCpV,KAAK4H,YAAcwN,EAAatU,OAAS,E,sDAGzCd,KAAKqG,GAAG0O,aAAa/U,KAAKoV,gB,mCAEjB7O,GACTvG,KAAKqG,GAAGsO,WAAW3U,KAAKqG,GAAGuO,aAAc5U,KAAKoV,cAC9CpV,KAAKqG,GAAG2O,wBAAwBzO,GAChCvG,KAAKqG,GAAG4O,oBAAoB1O,EAAa,EAAGvG,KAAKqG,GAAG6O,OAAO,EAAO,GAAO,K,oCAE/DjN,GACVjI,KAAKqG,GAAGsO,WAAW3U,KAAKqG,GAAGuO,aAAc5U,KAAKoV,cAC9CpV,KAAKqG,GAAG2O,wBAAwB/M,GAChCjI,KAAKqG,GAAG4O,oBAAoBhN,EAAW,EAAGjI,KAAKqG,GAAG6O,OAAO,EAAM,GAAO,Q,KClHzDG,E,WAIjB,WAAYxR,GAAqD,IAAD,SAA9BuF,EAA8B,uDAAN,KAAM,yBAH/CvF,YAG+C,OAF/CyR,cAE+C,OAD/ClM,YAC+C,OAKvDwF,UAAYjI,GAAmB,SAACN,GAAD,OACpC,IAAIqL,EAAuBrL,EAAIkP,EAAuBlP,EAAI,EAAKxC,QAASwC,EAAGmP,MAAO,EAAKpM,WALvFpJ,KAAK6D,OAASA,EACd7D,KAAKsV,SAAL,UAAgB3T,EAAS8T,WAAW5R,UAApC,aAAgB,EAA6BiL,iBAC7C9O,KAAKoJ,OAAoB,OAAXA,EAAkBpJ,KAAOoJ,E,6DAKvC,OAAOpJ,KAAKsV,a,KCVCI,G,WAGjB,WAAYC,GAA8D,IAAD,OAA9BvM,EAA8B,uDAAN,KAAM,yBAFhEuM,cAEgE,OADxDvM,YACwD,OAIhEwF,UAAYjI,GAAmB,SAACN,GAAD,OACpC,IAAIqL,EACArL,EACA,EAAKsP,SAASC,mBAAmBvP,GACjCA,EAAGwP,UACH,EAAKzM,WARTpJ,KAAK2V,SAAWA,EAChB3V,KAAKoJ,OAAoB,OAAXA,EAAkBpJ,KAAOoJ,E,6DAUvC,OAAOpJ,KAAK2V,SAAS7G,mB,kCAKb3N,GACR,OAAO,IAAIQ,EACP3B,KAAK2V,SAASG,SAAS,EAAI3U,EAAI,GAC/BnB,KAAK2V,SAASG,SAAS,EAAI3U,EAAI,GAC/BnB,KAAK2V,SAASG,SAAS,EAAI3U,EAAI,M,oCAInC,IADA,IAAM0C,EAAS,IAAIkS,aAAa,EAAQ/V,KAAK2V,SAASK,OAC7C7U,EAAI,EAAGA,EAAInB,KAAKiW,gBAAiB9U,EACtC,IAAK,IAAIC,EAAI,EAAGA,EAAI,IAAKA,EAAG,CACxB,IAAMsB,EAAM,EAAIvB,EAAIC,EACd8U,EAAO,EAAI/U,GAAKC,EAAI,GAAK,EACzB8C,EAAKlE,KAAK2V,SAASG,SAASpT,GAC5ByB,EAAKnE,KAAK2V,SAASG,SAASI,GAClCrS,EAAO,GAAK,EAAInB,EAAM,GAAK,GAAKwB,EAAGpE,EACnC+D,EAAO,GAAK,EAAInB,EAAM,GAAK,GAAKwB,EAAGnE,EACnC8D,EAAO,GAAK,EAAInB,EAAM,GAAK,GAAKwB,EAAGxD,EACnCmD,EAAO,GAAK,EAAInB,EAAM,GAAK,GAAKyB,EAAGrE,EACnC+D,EAAO,GAAK,EAAInB,EAAM,GAAK,GAAKyB,EAAGpE,EACnC8D,EAAO,GAAK,EAAInB,EAAM,GAAK,GAAKyB,EAAGzD,EAG3C,OAAO,IAAI2U,EAAMxR,EAAQ7D,KAAKoJ,U,oCAxB9B,OAAOpJ,KAAK2V,SAASK,MAAQ,M,SCL/Bb,G,WAIF,WAAYV,EAAoBrL,GAAkB,IAAD,kCAHxCqL,UAGwC,OAFhCa,cAEgC,OADhClM,YACgC,OASxCwF,UAAYjI,GAAmB,SAACN,GAAD,OACpC,IAAIqL,EAA4BrL,EAAI,EAAKuP,mBAAmBvP,GAAKA,EAAG8P,OAAQ,EAAK/M,WATjFpJ,KAAKyU,KAAOA,EACZzU,KAAKoJ,OAASA,GAAUpJ,KAExB,IADA,IAAM8D,EAAU,IAAInC,EACXR,EAAI,EAAGA,EAAInB,KAAKgW,QAAS7U,EAC9B2C,EAAQ/B,IAAI/B,KAAK8V,SAAS3U,IAE9BnB,KAAKsV,SAAL,UAAgBxR,EAAQE,eAAxB,aAAgB,EAAiB8K,iB,6DAKjC,OAAO9O,KAAKsV,W,yCAEGjP,GACf,OHRD,SACHA,EACA+O,GAEA,OAAO,IAAID,EAAwB9O,EAAI+O,GGI5BG,CAAwClP,EAAIrG,KAAKyU,Q,+BAKnDtT,GACL,OAAO,IAAIQ,EAAS3B,KAAKyU,KAAK,EAAItT,EAAI,GAAInB,KAAKyU,KAAK,EAAItT,EAAI,GAAInB,KAAKyU,KAAK,EAAItT,EAAI,M,gCAE5EA,GACN,OAAO,IAAIQ,EAAS3B,KAAKyU,KAAK,EAAItT,EAAI,GAAInB,KAAKyU,KAAK,EAAItT,EAAI,GAAInB,KAAKyU,KAAK,EAAItT,EAAI,M,4BANlF,OAAOnB,KAAKyU,KAAK3T,OAAS,M,KCvC5BsV,G,sGACqBC,GACnB,OAAO,IAAIC,SAAqB,SAACC,GAC7B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,kBAAMH,EAAQC,EAAOG,SACrCH,EAAOI,kBAAkBP,U,KAKxBQ,GAAb,qGA2B0BpC,GAKlB,IAJA,IACMqC,EAAO,IAAIC,SAAStC,GACpBuC,EAAQF,EAAKG,UAAU,IAAI,GAC3B7B,EAAe,IAAIW,aAAa,GAAciB,GAJJ,WAKvC7V,GAML,IALA,IAAI+V,EAAM,GAAS,GAAJ/V,EACTgW,EAAO,WAAwB,OAAVD,GAAO,EAAUJ,EAAKM,WAAWF,EAAM,GAN/C,IAObG,EAAKF,IACLG,EAAKH,IACLI,EAAKJ,IACF9V,EAAI,EAAGA,EAAI,IAAKA,EAAG,CACxB,IAAMqB,EAAM,GAAK,EAAIvB,EAAIE,GACzB+T,EAAa1S,EAAM,GAAKyU,IACxB/B,EAAa1S,EAAM,GAAKyU,IACxB/B,EAAa1S,EAAM,GAAKyU,IACxB/B,EAAa1S,EAAM,GAAK2U,EACxBjC,EAAa1S,EAAM,GAAK4U,EACxBlC,EAAa1S,EAAM,GAAK6U,IAbvBpW,EAAI,EAAGA,EAAI6V,IAAS7V,EAAI,EAAxBA,GAgBT,OAAO,IAAIuU,GDjDZ,SAAuCjB,EAAoBrL,GAC9D,OAAO,IAAI+L,GAAwBV,EAAMrL,GCgDhBvF,CAAqCuR,MAhDlE,wEAmDiCiB,GAnDjC,uFAoD0BD,GAASoB,SAASnB,GApD5C,cAoDc3B,EApDd,yBAqDemC,EAAUY,QAAQ/C,IArDjC,yKAwDgCgD,GAxDhC,yFAyD+BC,MAAMD,GAzDrC,cAyDcE,EAzDd,gBA0D0BA,EAASC,cA1DnC,cA0DcnD,EA1Dd,yBA2DemC,EAAUY,QAAQ/C,IA3DjC,yGCN8BoD,IAAMC,cA4B7B,SAASC,GAAUC,GACtB,IAAInB,EAAOoB,iBAA6B,MAClC/I,EAAS+I,iBAA0B,MACnC7I,EAAa6I,iBAAO,IAAIvR,GAiB9B,OAhBAwR,qBAAU,WACc,OAAhBF,EAAMG,OACN/I,EAAWgJ,QAAQC,QAAQL,EAAMG,OAEf,MAAlBjJ,EAAOkJ,UACPvB,EAAKuB,QAAU,IAAI1R,EAAcwI,EAAOkJ,QAASJ,EAAM7I,UAAWC,EAAWgJ,QAASJ,EAAMM,mBAEjG,CAACpJ,EAAQ8I,EAAM7I,UAAW6I,EAAMM,iBACnCJ,qBAAU,WACc,MAAhBrB,EAAKuB,SAAkC,MAAfJ,EAAMG,QAC9B/I,EAAWgJ,QAAQG,aACnBnJ,EAAWgJ,QAAQC,QAAQL,EAAMG,OACjCtB,EAAKuB,QAAQzG,MACbkF,EAAKuB,QAAQ3K,YAElB,CAACuK,EAAMG,QAEN,4BAAQK,IAAKtJ,EAAQnC,MAAM,MAAMC,OAAO,MAAMyL,MAAO,CAAEC,YAAa,UAApE,gCCrDR,IA2BMC,G,WAWF,WAAYvS,GAA4B,yBAT/BA,QAS8B,OARtBC,aAQsB,OAPtBC,iBAOsB,OANtBsS,iBAMsB,OALtBrS,wBAKsB,OAJtBC,mBAIsB,OAHtBqS,gBAGsB,OAFtBpS,cAEsB,OADtBqS,yBACsB,EACnC/Y,KAAKqG,GAAKA,EACVrG,KAAKsG,QAAUK,EAAqBN,EAxCpC,8QAYA,6TA6BArG,KAAKuG,YAAcF,EAAGS,kBAAkB9G,KAAKsG,QAAS,YACtDtG,KAAK6Y,YAAcxS,EAAGS,kBAAkB9G,KAAKsG,QAAS,YACtDtG,KAAKwG,mBAAqBH,EAAGU,mBAAmB/G,KAAKsG,QAAS,mBAC9DtG,KAAKyG,cAAgBJ,EAAGU,mBAAmB/G,KAAKsG,QAAS,cACzDtG,KAAK8Y,WAAazS,EAAGU,mBAAmB/G,KAAKsG,QAAS,WACtDtG,KAAK0G,SAAWL,EAAGU,mBAAmB/G,KAAKsG,QAAS,SACpDtG,KAAK+Y,oBAAsB1S,EAAGU,mBAAmB/G,KAAKsG,QAAS,oB,iDAE9DU,EAA6BgS,EAA0CnV,EAAqBoV,EAAwBjD,GACrH,GAAIhP,EAAGX,KAAOrG,KAAKqG,GAAI,MAAM,IAAItF,MAAM,yDACvC,IAAMsF,EAAKW,EAAGX,GACdA,EAAGe,WAAWpH,KAAKsG,SACnBU,EAAGQ,yBAAyBxH,KAAKwG,oBACjCQ,EAAGS,0BAA0BzH,KAAKyG,eAE9B,MAAOuS,GACP3S,EAAGgB,UAAUrH,KAAK0G,SAAUsS,EAAWpU,EAAGoU,EAAW1R,EAAG0R,EAAWzR,GACnElB,EAAG6S,UAAUlZ,KAAK+Y,oBAAqB,KAEvC1S,EAAGgG,YAAYhG,EAAGiG,WAAY0M,GAC9B3S,EAAG6S,UAAUlZ,KAAK8Y,WAAY,GAC9BzS,EAAGgB,UAAUrH,KAAK0G,SAAU,EAAG,EAAG,GAClCL,EAAG6S,UAAUlZ,KAAK+Y,oBAAqB,IAG3C1S,EAAGsO,WAAWtO,EAAGuO,aAAc/Q,GAC/BwC,EAAG2O,wBAAwBhV,KAAKuG,aAChCF,EAAG4O,oBAAoBjV,KAAKuG,YAAa,EAAGF,EAAG6O,OAAO,EAAO,EAAG,GAEhE7O,EAAGsO,WAAWtO,EAAGuO,aAAcqE,GAC/B5S,EAAG2O,wBAAwBhV,KAAK6Y,aAChCxS,EAAG4O,oBAAoBjV,KAAK6Y,YAAa,EAAGxS,EAAG6O,OAAO,EAAO,EAAG,GAEhE7O,EAAGsB,WAAWtB,EAAG8S,aAAc,EAAGnD,K,mCAEzBvB,GACT,IAAMC,EAAM1U,KAAKqG,GAAGmO,eAGpB,OAFAxU,KAAKqG,GAAGsO,WAAW3U,KAAKqG,GAAGuO,aAAcF,GACzC1U,KAAKqG,GAAGwO,WAAW7U,KAAKqG,GAAGuO,aAAcH,EAAMzU,KAAKqG,GAAGyO,aAChDJ,I,6CAGP,IAAMD,EAAO,IAAIsB,aAAa,GAK9B,OAJAtB,EAAK,GAAK,EAAGA,EAAK,GAAK,EACvBA,EAAK,GAAK,EAAGA,EAAK,GAAK,EACvBA,EAAK,GAAK,EAAGA,EAAK,GAAK,EACvBA,EAAK,GAAK,EAAGA,EAAK,GAAK,EAChBzU,KAAKwU,aAAaC,K,oCAEf2E,GACV,IAAM/S,EAAKrG,KAAKqG,GACVgT,EAAUhT,EAAGyF,gBAKnB,OAJAzF,EAAGgG,YAAYhG,EAAGiG,WAAY+M,GAC9BhT,EAAGiH,WAAWjH,EAAGiG,WAAY,EAAGjG,EAAGiT,KAAMjT,EAAGiT,KAAMjT,EAAGmH,cAAe4L,GACpE/S,EAAGkT,eAAelT,EAAGiG,YACrBjG,EAAGgG,YAAYhG,EAAGiG,WAAY,MACvB+M,M,KAtETT,GACc/Q,IAAMlB,GAAmB,SAACN,GAAD,OAA+B,IAAIuS,GAAkBvS,M,IAyE5FmT,G,WAOF,WAAYnT,EAA2B+S,EAAuBvV,EAAsBuF,GAAiB,yBANpF9C,aAMmF,OALnF0P,WAKmF,OAJnFnS,YAImF,OAHnFoV,eAGmF,OAFnFI,aAEmF,OADnFjQ,YACmF,EAChGpJ,KAAKsG,QAAUsS,GAAkB/Q,IAAIxB,GACrCrG,KAAKgW,MAAQnS,EAAO/C,OAAS,EAC7Bd,KAAK6D,OAAS7D,KAAKsG,QAAQkO,aAAa3Q,GACxC7D,KAAKiZ,UAAYjZ,KAAKsG,QAAQmT,uBAC9BzZ,KAAKqZ,QAAUrZ,KAAKsG,QAAQwF,cAAcsN,GAC1CpZ,KAAKoJ,OAASA,E,sDAGdpJ,KAAKsG,QAAQD,GAAG0O,aAAa/U,KAAK6D,QAClC7D,KAAKsG,QAAQD,GAAG0G,cAAc/M,KAAKqZ,W,2BAElCrS,GACDhH,KAAKsG,QAAQgD,KAAKtC,EAAIhH,KAAKqZ,QAASrZ,KAAK6D,OAAQ7D,KAAKiZ,UAAWjZ,KAAKgW,S,uCAEzDhP,EAA6BuC,GAC1CvJ,KAAKsG,QAAQgD,KAAKtC,EAAIuC,EAAQC,YAAYxJ,KAAKoJ,QAASpJ,KAAK6D,OAAQ7D,KAAKiZ,UAAWjZ,KAAKgW,W,KAIrF0D,GAAb,WAMI,WACIN,GAID,IAAD,OAHEO,EAGF,uDAHmB,IAAIhY,EAAS,IAAIA,EAAa,EAAGyX,EAAMpM,OAAQ,IAAIrL,EAAa,EAAGyX,EAAMnM,SAC1FiK,EAEF,uDAFwBvV,EAAeiB,KACrCwG,EACF,uDAD0B,KAC1B,yBAVegQ,WAUf,OATelC,SASf,OAReyC,UAQf,OAPerE,cAOf,OANelM,YAMf,OAUOwF,UAAYjI,GAAmB,SAACN,GACrC,OAAO,IAAImT,GAAiBnT,EAAI,EAAK+S,MAAO,EAAKQ,gBAAiB,EAAKxQ,WAVvEpJ,KAAKoZ,MAAQA,EACbpZ,KAAKkX,IAAMA,EACXlX,KAAK2Z,KAAOA,EACZ3Z,KAAKsV,SAAW,IAAI3T,EAChBuV,EAAI3R,UAAUoU,EAAKpY,OAAOsY,QAC1BF,EAAK7W,MAAMlB,IAAI+X,EAAKpY,QAAQT,UAEhCd,KAAKoJ,OAAoB,OAAXA,EAAkBpJ,KAAOoJ,EAnB/C,6DAyBQ,OAAOpJ,KAAKsV,WAzBpB,sCA8BQ,IAFA,IAAMwE,EAAW9Z,KAAK2Z,KAAKI,aACrBlW,EAAS,IAAIkS,aAAa,EAAI+D,EAAShZ,QACpCK,EAAI,EAAGA,EAAI2Y,EAAShZ,SAAUK,EAAG,CACtC,IAAMuD,EAAI1E,KAAKkX,IAAI3R,UAAUuU,EAAS3Y,GAAG0Y,QACzChW,EAAO,EAAI1C,EAAI,GAAKuD,EAAE5E,EACtB+D,EAAO,EAAI1C,EAAI,GAAKuD,EAAE3E,EACtB8D,EAAO,EAAI1C,EAAI,GAAKuD,EAAEhE,EAE1B,OAAOmD,MApCf,KCvDemW,OA3Cf,WAAgB,IAAD,EACWC,mBAAuC,MADlD,mBACR7B,EADQ,KACD8B,EADC,KAiCb,OA/BA/B,qBAAU,WACRgC,GAAcC,QAAQ,cAAcC,KAAKH,KAExC,IA6BD,yBAAKI,UAAU,OACb,2BAAOC,GAAG,SAASzH,KAAK,OAAO0H,OAAO,OAAOC,SA5BjD,SAAwBvK,GACtB,IAAMwK,EAAQxK,EAAEyK,OAAOD,MACV,MAATA,GAAiBA,EAAM5Z,QAAU,GACnCqZ,GAAc3C,SAASkD,EAAM,IAAIL,KAAKH,MAyBmC,6BACzE,8CAAe,2BAAOK,GAAG,cAAczH,KAAK,OAAO0H,OAAO,OAAOC,SAvBrE,SAA6BvK,GAC3B,IAAMwK,EAAQxK,EAAEyK,OAAOD,MACvB,GAAa,MAATA,GAAiBA,EAAM5Z,QAAU,EAAG,CACtC,IAAM0V,EAAS,IAAIC,WACb2C,EAAQ,IAAIwB,MAClBpE,EAAOE,OAAS,SAAAxG,GACE,MAAZA,EAAEyK,QAC2B,kBAApBzK,EAAEyK,OAAOhE,SAClByC,EAAMrG,IAAM7C,EAAEyK,OAAOhE,SAI3ByC,EAAM1C,OAAS,SAAAxG,GACbhD,QAAQC,IAAI,gBACZD,QAAQC,IAAI+C,GACZgK,EAAS,IAAIW,GAAezB,KAE9B5C,EAAOsE,cAAcJ,EAAM,QAMuE,6BAClG,kBAAC,GAAD,CAAetL,WAAW,EAAMgJ,MAAOA,EAAOG,eAAgB,OC1DhDwC,QACW,cAA7BtI,OAAOR,SAAS+I,UAEe,UAA7BvI,OAAOR,SAAS+I,UAEhBvI,OAAOR,SAAS+I,SAASC,MACvB,2DCZNC,IAASxN,OAAO,kBAAC,GAAD,MAASyD,SAASgK,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjB,MAAK,SAAAkB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxO,QAAQwO,MAAMA,EAAMC,c","file":"static/js/main.43824283.chunk.js","sourcesContent":["\nexport class Vec2 {\n    readonly x: number; readonly y: number;\n    constructor(x: number, y: number) {\n        this.x = x; this.y = y;\n    }\n    static readonly ZERO = new Vec2(0, 0);\n    static readonly EX = new Vec2(1, 0);\n    static readonly EY = new Vec2(0, 1);\n    to3d() {\n        return new Vec3(this.x, this.y, 0);\n    }\n    clone() {\n        return new Vec2(this.x, this.y);\n    }\n    lengthSquared(): number {\n        return this.x * this.x + this.y * this.y;\n    }\n    length(): number {\n        return Math.sqrt(this.lengthSquared());\n    }\n    neg(): Vec2 {\n        return new Vec2(-this.x, -this.y);\n    }\n    add(v: Vec2): Vec2 {\n        return new Vec2(this.x + v.x, this.y + v.y);\n    }\n    sub(v: Vec2): Vec2 {\n        return new Vec2(this.x - v.x, this.y - v.y);\n    }\n    mul(scalar: number): Vec2 {\n        return new Vec2(scalar * this.x, scalar * this.y);\n    }\n}\n\nexport class Vec3 {\n    readonly x: number; readonly y: number; readonly z: number;\n    constructor(x: number, y: number, z: number) {\n        this.x = x; this.y = y; this.z = z;\n    }\n    static readonly ZERO = new Vec3(0, 0, 0);\n    static readonly EX = new Vec3(1, 0, 0);\n    static readonly EY = new Vec3(0, 1, 0);\n    static readonly EZ = new Vec3(0, 0, 1);\n    clone() {\n        return new Vec3(this.x, this.y, this.z);\n    }\n    lengthSquared(): number {\n        return this.x * this.x + this.y * this.y + this.z * this.z;\n    }\n    length(): number {\n        return Math.sqrt(this.lengthSquared());\n    }\n    neg(): Vec3 {\n        return new Vec3(-this.x, -this.y, -this.z);\n    }\n    add(v: Vec3): Vec3 {\n        return new Vec3(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    sub(v: Vec3): Vec3 {\n        return new Vec3(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    mul(scalar: number): Vec3 {\n        return new Vec3(scalar * this.x, scalar * this.y, scalar * this.z);\n    }\n    cross(v: Vec3): Vec3 {\n        return new Vec3(\n            this.y * v.z - this.z * v.y,\n            this.z * v.x - this.x * v.z,\n            this.x * v.y - this.y * v.x);\n    }\n}\n\nexport class Matrix4 {\n    private a: number[];\n    constructor(a: number[]) {\n        if (a.length !== 16) throw new Error(\"Matrix4: a.length != 16\");\n        this.a = a;\n    }\n    static get ZERO() {\n        return new Matrix4([\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n            0, 0, 0, 0\n        ]);\n    }\n    static get UNIT() {\n        return new Matrix4([\n            1, 0, 0, 0,\n            0, 1, 0, 0,\n            0, 0, 1, 0,\n            0, 0, 0, 1\n        ]);\n    }\n    get array(): number[] {\n        return this.a;\n    }\n    mul(m: Matrix4): Matrix4 {\n        const c = new Array<number>(16);\n        for (let i = 0; i < 4; ++i) {\n            for (let j = 0; j < 4; ++j) {\n                for (let k = 0; k < 4; ++k) {\n                    c[i + 4 * j] += this.a[i + 4 * k] * m.a[4 * j + k];\n                }\n            }\n        }\n        return new Matrix4(c);\n    }\n}\n\nexport class Sphere {\n    readonly center: Vec3;\n    readonly radius: number;\n    constructor(center: Vec3, radius: number) {\n        this.center = center;\n        this.radius = radius;\n    }\n    static readonly UNIT = new Sphere(Vec3.ZERO, 1.0);\n    static boundaryOfTwo(sphere1: Sphere, sphere2: Sphere) {\n        const vec = sphere2.center.sub(sphere1.center);\n        const len = vec.length();\n        if (len + sphere2.radius < sphere1.radius) return sphere1;\n        if (len + sphere1.radius < sphere2.radius) return sphere2;\n        const t = (len + sphere2.radius - sphere1.radius) / 2;\n        const center = sphere1.center.add(vec.mul(t / len));\n        const radius = len + sphere1.radius + sphere2.radius / 2;\n        return new Sphere(center, radius);\n    }\n    static boundaryOfArray(spheres: Sphere[]) {\n        switch (spheres.length) {\n            case 0: return new Sphere(Vec3.ZERO, 0.0);\n            case 1: return spheres[0];\n            case 2: return Sphere.boundaryOfTwo(spheres[0], spheres[1]);\n            default:\n                const removeAt = (i: number) => {\n                    const ret = spheres[i];\n                    spheres[i] = spheres[spheres.length - 1];\n                    spheres.pop();\n                    return ret;\n                }\n                const idx = spheres.reduce((acc, item, idx) => spheres[acc].radius > item.radius ? acc : idx, 0);\n                let sphere = removeAt(idx);\n                while (spheres.length > 0) {\n                    let idx = 0;\n                    let len = sphere.center.sub(spheres[0].center).length() + spheres[0].radius;\n                    for (let i = 1; i < spheres.length; ++i) {\n                        const l = sphere.center.sub(spheres[i].center).length() + spheres[i].radius;\n                        if (l > len) {\n                            len = l;\n                            idx = i;\n                        }\n                    }\n                    sphere = Sphere.boundaryOfTwo(sphere, removeAt(idx));\n                }\n                return sphere;\n        }\n    }\n}\n\nexport class Interval {\n    readonly lower: number;\n    readonly upper: number;\n    static new(lower: number, upper: number): Interval | undefined {\n        return lower <= upper ? new Interval(lower, upper) : undefined;\n    }\n    constructor(lower: number, upper: number) {\n        if (lower > upper) throw \"invalid interval\";\n        this.lower = lower;\n        this.upper = upper;\n    }\n    get width(): number {\n        return this.upper - this.lower;\n    }\n    get center(): number {\n        return (this.lower + this.upper) / 2;\n    }\n    static readonly UNIT = new Interval(0, 1);\n    static readonly INFINITY = new Interval(Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY);\n}\n\nexport class IntervalBuilder {\n    private lower: number = Number.POSITIVE_INFINITY;\n    private upper: number = Number.NEGATIVE_INFINITY;\n    add(x: number) {\n        if (x < this.lower) this.lower = x;\n        if (x > this.upper) this.upper = x;\n    }\n    build(): Interval | undefined {\n        return Interval.new(this.lower, this.upper)\n    }\n}\n\nexport class Box2 {\n    readonly x: Interval;\n    readonly y: Interval;\n    constructor(x: Interval, y: Interval) {\n        this.x = x;\n        this.y = y;\n    }\n    static new(x?: Interval, y?: Interval): Box2 | undefined {\n        return (x && y) ? new Box2(x, y) : undefined;\n    }\n    get ll(): Vec2 { return new Vec2(this.x.lower, this.y.lower); }\n    get ul(): Vec2 { return new Vec2(this.x.upper, this.y.lower); }\n    get lu(): Vec2 { return new Vec2(this.x.lower, this.y.upper); }\n    get uu(): Vec2 { return new Vec2(this.x.upper, this.y.upper); }\n    get lower(): Vec2 {\n        return this.ll;\n    }\n    get upper(): Vec2 {\n        return this.uu;\n    }\n    get center(): Vec2 {\n        return new Vec2(this.x.center, this.y.center);\n    }\n    points(): Vec2[] {\n        return [this.ll, this.ul, this.lu, this.uu];\n    }\n    points_ccw(): Vec2[] {\n        return [this.ll, this.ul, this.uu, this.lu];\n    }\n    static readonly UNIT = new Box2(Interval.UNIT, Interval.UNIT);\n}\n\nexport class Box3 {\n    readonly x: Interval;\n    readonly y: Interval;\n    readonly z: Interval;\n    constructor(x: Interval, y: Interval, z: Interval) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static new(x?: Interval, y?: Interval, z?: Interval): Box3 | undefined {\n        return (x && y && z) ? new Box3(x, y, z) : undefined;\n    }\n    get lower(): Vec3 {\n        return new Vec3(this.x.lower, this.y.lower, this.z.lower);\n    }\n    get upper(): Vec3 {\n        return new Vec3(this.x.upper, this.y.upper, this.z.upper);\n    }\n    get center(): Vec3 {\n        return new Vec3(this.x.center, this.y.center, this.z.center);\n    }\n    boundingSphere(): Sphere {\n        const center = this.center;\n        const radius = this.upper.sub(center).length();\n        return new Sphere(center, radius);\n    }\n    static boundaryOf(points: Float32Array): Box3 | undefined {\n        const builder = new Box3Builder();\n        for (let i = 0; i < points.length; i += 3) {\n            builder.add(points[i + 0], points[i + 1], points[i + 2]);\n        }\n        return builder.build();\n    }\n}\n\nexport class Box3Builder {\n    private readonly x = new IntervalBuilder();\n    private readonly y = new IntervalBuilder();\n    private readonly z = new IntervalBuilder();\n    add(x: number, y: number, z: number): void;\n    add(v: Vec3): void;\n    add(x: number | Vec3, y?: number, z?: number) {\n        if (typeof x === 'number') {\n            this.x.add(x);\n            this.y.add(y || 0);\n            this.z.add(z || 0);\n        } else {\n            this.x.add(x.x);\n            this.y.add(x.y);\n            this.z.add(x.z);\n        }\n    }\n    build(): Box3 | undefined {\n        return Box3.new(this.x.build(), this.y.build(), this.z.build());\n    }\n}\n\nexport class Triangle {\n    readonly p1: Vec3;\n    readonly p2: Vec3;\n    readonly p3: Vec3;\n    constructor(p1: Vec3, p2: Vec3, p3: Vec3) {\n        this.p1 = p1;\n        this.p2 = p2;\n        this.p3 = p3;\n    }\n}\n\nexport class Quaternion {\n    readonly w: number;\n    readonly x: number;\n    readonly y: number;\n    readonly z: number;\n    constructor(w: number, x: number, y: number, z: number) {\n        this.w = w;\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    clone() {\n        return new Quaternion(this.w, this.x, this.y, this.z);\n    }\n    conjugate(): Quaternion {\n        return new Quaternion(this.w, -this.x, -this.y, -this.z);\n    }\n    mul(q: Quaternion): Quaternion {\n        return new Quaternion(\n            this.w * q.w - this.x * q.x - this.y * q.y - this.z * q.z,\n            this.w * q.x + this.x * q.w + this.y * q.z - this.z * q.y,\n            this.w * q.y - this.x * q.z + this.y * q.w + this.z * q.x,\n            this.w * q.z + this.x * q.y - this.y * q.x + this.z * q.w);\n    }\n    static readonly UNIT = new Quaternion(1, 0, 0, 0);\n}\n\nexport class Rotation {\n    private readonly q: Quaternion;\n    constructor(q: Quaternion) {\n        this.q = q;\n    }\n    static ofAxis(axis: Vec3, radian: number): Rotation {\n        let c = Math.cos(0.5 * radian);\n        let s = Math.sin(0.5 * radian) / axis.length();\n        if (!isFinite(s)) s = 0;\n        return new Rotation(new Quaternion(c, s * axis.x, s * axis.y, s * axis.z));\n    }\n    static readonly UNIT = new Rotation(Quaternion.UNIT);\n    get u() { return this.transform(Vec3.EX); }\n    get v() { return this.transform(Vec3.EY); }\n    get n() { return this.transform(Vec3.EZ); }\n    clone() {\n        return new Rotation(this.q.clone());\n    }\n    transform(p: Vec3): Vec3 {\n        const q = this.q.mul(new Quaternion(1, p.x, p.y, p.z)).mul(this.q.conjugate());\n        return new Vec3(q.x, q.y, q.z);\n    }\n    inverse(): Rotation {\n        return new Rotation(this.q.conjugate());\n    }\n    mul(r: Rotation): Rotation {\n        return new Rotation(this.q.mul(r.q));\n    }\n    toMatrix(): Matrix4 {\n        const q = this.q;\n\n        const ww = q.w * q.w;\n        const xx = q.x * q.x;\n        const yy = q.y * q.y;\n        const zz = q.z * q.z;\n\n        const wx = q.w * q.x;\n        const wy = q.w * q.y;\n        const wz = q.w * q.z;\n\n        const xy = q.x * q.y;\n        const yz = q.y * q.z;\n        const zx = q.z * q.x;\n\n        return new Matrix4([\n            ww + xx - yy - zz, 2 * (xy + wz), 2 * (zx - wy), 0,\n            2 * (xy - wz), ww - xx + yy - zz, 2 * (yz + wx), 0,\n            2 * (zx + wy), 2 * (yz - wx), ww - xx - yy + zz, 0,\n            0, 0, 0, 1\n        ]);\n    }\n}\n\nexport class RigidTrans {\n    readonly r: Rotation;\n    readonly t: Vec3; // translation\n    constructor(r: Rotation, t: Vec3) {\n        this.r = r;\n        this.t = t;\n    }\n    static readonly UNIT = new RigidTrans(Rotation.UNIT, Vec3.ZERO);\n    clone() {\n        return new RigidTrans(this.r.clone(), this.t.clone());\n    }\n    transform(p: Vec3): Vec3 {\n        return this.r.transform(p).add(this.t);\n    }\n    inverse(): RigidTrans {\n        const r = this.r.inverse();\n        const v = r.transform(this.t).neg();\n        return new RigidTrans(r, v);\n    }\n    toMatrix(): Matrix4 {\n        let mat = this.r.toMatrix();\n        mat.array[12] = this.t.x;\n        mat.array[13] = this.t.y;\n        mat.array[14] = this.t.z;\n        return mat;\n    }\n}\n","import * as glview from './glview';\nimport * as vbo from './vbo';\nimport { basename } from 'path';\n\nexport class PointsProgram {\n    static readonly get = glview.createCache((gl: WebGLRenderingContext) => new PointsProgram(gl));\n    private static readonly vs = `\n    attribute vec4 position;\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projMatrix;\n    void main() {\n        gl_Position = projMatrix * modelViewMatrix * position;\n    }`;\n    private static readonly fs = `\n    precision mediump float;\n    uniform vec3 color;\n    void main(){\n        gl_FragColor = vec4(color, 1);\n    }`;\n    private readonly gl: WebGLRenderingContext;\n    private readonly program: WebGLProgram;\n    private readonly atrPosition: number;\n    private readonly uniModelViewMatrix: WebGLUniformLocation;\n    private readonly uniProjMatrix: WebGLUniformLocation;\n    private readonly uniColor: WebGLUniformLocation;\n    constructor(gl: WebGLRenderingContext) {\n        this.gl = gl;\n        this.program = glview.createProgram(gl, PointsProgram.vs, PointsProgram.fs);\n        this.atrPosition = gl.getAttribLocation(this.program, \"position\");\n        this.uniModelViewMatrix = gl.getUniformLocation(this.program, \"modelViewMatrix\")!;\n        this.uniProjMatrix = gl.getUniformLocation(this.program, \"projMatrix\")!;\n        this.uniColor = gl.getUniformLocation(this.program, \"color\")!;\n    }\n    draw(rc: glview.RenderingContext, buffer: vbo.VertexBuffer, mode: number, color3f: glview.Color3) {\n        if (rc.gl !== this.gl || buffer.gl !== this.gl) throw new Error(\"PointsProgram: GL rendering context mismatch\");\n        const gl = rc.gl;\n        gl.useProgram(this.program);\n        gl.uniform3f(this.uniColor, color3f.r, color3f.g, color3f.b);\n        rc.glUniformModelViewMatrix(this.uniModelViewMatrix);\n        rc.glUniformProjectionMatrix(this.uniProjMatrix);\n        buffer.enablePoints(this.atrPosition);\n        gl.drawArrays(mode, 0, buffer.vertexCount);\n    }\n}\n\nexport interface PointNormalsProgram {\n    draw(rc: glview.RenderingContext, buffer: vbo.VertexNormalBuffer, mode: number): void;\n}\n\nclass PointNormalsProgramImpl implements PointNormalsProgram {\n    readonly gl: WebGLRenderingContext;\n    readonly program: WebGLProgram;\n    private readonly atrPosition: number;\n    private readonly atrNormal: number;\n    private readonly uniModelViewMatrix: WebGLUniformLocation;\n    private readonly uniProjMatrix: WebGLUniformLocation;\n    protected constructor(gl: WebGLRenderingContext, srcV: string, srcF: string) {\n        this.gl = gl;\n        this.program = glview.createProgram(gl, srcV, srcF);\n        this.atrPosition = gl.getAttribLocation(this.program, \"position\");\n        this.atrNormal = gl.getAttribLocation(this.program, \"normal\");\n        this.uniModelViewMatrix = gl.getUniformLocation(this.program, \"modelViewMatrix\")!;\n        this.uniProjMatrix = gl.getUniformLocation(this.program, \"projMatrix\")!;\n    }\n    draw(rc: glview.RenderingContext, buffer: vbo.VertexNormalBuffer, mode: number) {\n        if (rc.gl !== this.gl || buffer.gl !== this.gl) throw new Error(\"GL rendering context mismatch\");\n        const gl = rc.gl;\n        gl.useProgram(this.program);\n        rc.glUniformModelViewMatrix(this.uniModelViewMatrix);\n        rc.glUniformProjectionMatrix(this.uniProjMatrix);\n        buffer.enablePoints(this.atrPosition);\n        buffer.enableNormals(this.atrNormal);\n        gl.drawArrays(mode, 0, buffer.vertexCount);\n    }\n}\n\n\nclass PointNormalsCommon {\n    static readonly vs = `\n    attribute vec4 position;\n    attribute vec3 normal;\n    varying vec3 fPos;\n    varying vec3 fNrm;\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projMatrix;\n    void main() {\n        vec4 pos = modelViewMatrix * position;\n        fPos = pos.xyz;\n        fNrm = mat3(modelViewMatrix) * normal;\n        gl_Position = projMatrix * pos;\n    }`;\n    static readonly vs2 = `#version 300 es\n    in vec4 position;\n    in vec3 normal;\n    out vec3 fPos;\n    out vec3 fNrm;\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projMatrix;\n    void main() {\n        vec4 pos = modelViewMatrix * position;\n        fPos = pos.xyz;\n        fNrm = mat3(modelViewMatrix) * normal;\n        gl_Position = projMatrix * pos;\n    }`;\n}\n\nexport class PhongShadingProgram extends PointNormalsProgramImpl {\n    static readonly get = glview.createCache((gl: WebGLRenderingContext) => new PhongShadingProgram(gl));\n    static readonly fs = `\n    precision mediump float;\n    varying vec3 fPos;\n    varying vec3 fNrm;\n    void main(){\n        vec4 lightPos = vec4(1.0, 1.0, 1.0, 0.0);\n        float shininess = 2.0;\n        float ambient = 0.1;\n        vec3 col = vec3(0.0, 0.8, 0.0);\n\n        vec3 light = normalize((lightPos - vec4(fPos, 1) * lightPos.w).xyz);\n        vec3 nrm = normalize(fNrm);\n        vec3 refDir = reflect(-light, nrm);\n        float diffuse = max(dot(light, nrm), 0.0);\n        //float specular = 0.0;\n        float specular = pow(max(refDir.z, 0.0), shininess);\n\n        gl_FragColor = vec4((diffuse + ambient) * col + vec3(specular), 1);\n    }`;\n    static readonly fs2 = `#version 300 es\n    precision mediump float;\n    in vec3 fPos;\n    in vec3 fNrm;\n    out vec4 color;\n    void main(){\n        vec4 lightPos = vec4(1.0, 1.0, 1.0, 0.0);\n        float shininess = 2.0;\n        float ambient = 0.1;\n        vec3 col = vec3(0.0, 0.8, 0.0);\n\n        vec3 light = normalize((lightPos - vec4(fPos, 1) * lightPos.w).xyz);\n        vec3 nrm = normalize(fNrm);\n        vec3 refDir = reflect(-light, nrm);\n        float diffuse = max(dot(light, nrm), 0.0);\n        //float specular = 0.0;\n        float specular = pow(max(refDir.z, 0.0), shininess);\n\n        color = vec4((diffuse + ambient) * col + vec3(specular), 1);\n    }`;\n    private constructor(gl: WebGLRenderingContext) {\n        glview.isWebGL2(gl) ?\n            super(gl, PointNormalsCommon.vs2, PhongShadingProgram.fs2) :\n            super(gl, PointNormalsCommon.vs, PhongShadingProgram.fs);\n    }\n}\n\nexport class ToonShadingProgram extends PointNormalsProgramImpl {\n    static readonly get = glview.createCache((gl: WebGLRenderingContext) => new ToonShadingProgram(gl));\n    private static readonly fs2 = `#version 300 es\n    precision mediump float;\n    in vec3 fPos;\n    in vec3 fNrm;\n    out vec4 color;\n    void main(){\n        const vec4 lightPos = vec4(1.0, 1.0, 1.0, 0.0);\n        const float shininess = 2.0;\n        const float ambient = 0.3;\n        const vec3 col = vec3(0.0, 0.8, 0.0);\n\n        vec3 light = normalize((lightPos - vec4(fPos, 1) * lightPos.w).xyz);\n        vec3 nrm = normalize(fNrm);\n        vec3 refDir = reflect(-light, nrm);\n        float diffuse = dot(light, nrm) < 0.0 ? 0.0 : 1.0;\n        float specular = pow(max(refDir.z, 0.0), shininess);\n        specular = specular < 0.5 ? 0.0 : 0.7;\n\n        color = vec4((diffuse + ambient) * col + vec3(specular), 1);\n    }`;\n    private constructor(gl: WebGLRenderingContext) {\n        super(gl, PointNormalsCommon.vs2, ToonShadingProgram.fs2);\n    }\n}\n\nexport class CrazyShadingProgram extends PointNormalsProgramImpl {\n    static readonly get = glview.createCache((gl: WebGLRenderingContext) => new CrazyShadingProgram(gl));\n    static readonly vs2 = `#version 300 es\n    in vec4 position;\n    in vec3 normal;\n    out vec3 fPos;\n    out vec3 fNrm;\n    out vec2 fUV;\n    out vec3 fVecU;\n    out vec3 fVecV;\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projMatrix;\n    void main() {\n        vec4 pos = modelViewMatrix * position;\n        fPos = pos.xyz;\n        fNrm = mat3(modelViewMatrix) * normal;\n        gl_Position = projMatrix * pos;\n\n        vec3 a = abs(normal);\n        if (a.x <= a.y && a.x <= a.z) {\n            fVecU = normalize(vec3(0, normal.z, -normal.y));\n        }\n        else if (a.y <= a.x && a.y <= a.z) {\n            fVecU = normalize(vec3(-normal.z, 0, normal.x));\n        }\n        else {\n            fVecU = normalize(vec3(normal.y, -normal.x, 0));\n        }\n        fVecV = normalize(cross(normal, fVecU));\n        float u = dot(position.xyz, fVecU);\n        float v = dot(position.xyz, fVecV);\n        fUV = vec2(u, v);\n        fVecU = mat3(modelViewMatrix) * fVecU;\n        fVecV = mat3(modelViewMatrix) * fVecV;\n    }`;\n    private static readonly fs2 = `#version 300 es\n    precision mediump float;\n    in vec3 fPos;\n    in vec3 fNrm;\n    in vec2 fUV;\n    in vec3 fVecU;\n    in vec3 fVecV;\n    out vec4 color;\n    void main(){\n        const vec4 lightPos = vec4(1.0, 1.0, 1.0, 0.0);\n        const float shininess = 2.0;\n        const float ambient = 0.2;\n        const vec3 col = vec3(0.0, 0.8, 0.0);\n\n        vec3 nrm = normalize(fNrm);\n        const float SCALE = 10.0;\n        float u = 2.0 * (fUV.x / SCALE - round(fUV.x / SCALE));\n        float v = 2.0 * (fUV.y / SCALE - round(fUV.y / SCALE));\n        float r2 = u * u + v * v;\n        if (r2 < 1.0) {\n            float n = sqrt(1.0 - r2);\n            nrm = u * fVecU + v * fVecV + n * nrm;\n        }\n\n        vec3 light = normalize((lightPos - vec4(fPos, 1) * lightPos.w).xyz);\n        vec3 refDir = reflect(-light, nrm);\n        float diffuse = max(dot(light, nrm), 0.0);\n        float specular = pow(max(refDir.z, 0.0), shininess);\n\n        color = vec4((diffuse + ambient) * col + vec3(specular), 1);\n    }`;\n    private constructor(gl: WebGLRenderingContext) {\n        super(gl, CrazyShadingProgram.vs2, CrazyShadingProgram.fs2);\n    }\n}\n\nexport class PulseAnimationProgram extends PointNormalsProgramImpl {\n    static readonly get = glview.createCache((gl: WebGLRenderingContext) => new PulseAnimationProgram(gl));\n    static readonly vs2 = `#version 300 es\n    in vec4 position;\n    in vec3 normal;\n    out vec3 fPos;\n    out vec3 fNrm;\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projMatrix;\n    uniform float seconds;\n    uniform float amplitude;\n    const float PERIOD = 2.0;\n    const float PI = 3.141592653589793;\n    void main() {\n        float delta = amplitude * sin(2.0 * PI * seconds / PERIOD);\n        vec4 pos = modelViewMatrix * (position + delta * vec4(normal, 0));\n        fPos = pos.xyz;\n        fNrm = mat3(modelViewMatrix) * normal;\n        gl_Position = projMatrix * pos;\n    }`;\n    private readonly uniSeconds: WebGLUniformLocation;\n    private readonly uniAmplitude: WebGLUniformLocation;\n    private seconds: number = 0.0;\n    private constructor(gl: WebGLRenderingContext) {\n        super(gl, PulseAnimationProgram.vs2, PhongShadingProgram.fs2);\n        this.uniSeconds = gl.getUniformLocation(this.program, \"seconds\")!;\n        this.uniAmplitude = gl.getUniformLocation(this.program, \"amplitude\")!;\n        const dt = 10;  // [milliseconds]\n        setInterval(() => { this.seconds += dt / 1000.0; }, dt);\n    }\n    draw(rc: glview.RenderingContext, buffer: vbo.VertexNormalBuffer, mode: number) {\n        if (rc.gl !== this.gl || buffer.gl !== this.gl) throw new Error(\"GL rendering context mismatch\");\n        const gl = rc.gl;\n        gl.useProgram(this.program);\n        gl.uniform1f(this.uniSeconds, this.seconds);\n        gl.uniform1f(this.uniAmplitude, 2.0);\n        super.draw(rc, buffer, mode);\n    }\n}\n\nexport class VerticesDrawer implements glview.Drawable {\n    private readonly program: PointsProgram;\n    private readonly buffer: vbo.VertexBuffer;\n    private readonly entity: object;\n    private readonly mode: number;\n    constructor(gl: WebGLRenderingContext, buffer: vbo.VertexBuffer, mode: number, entity: object) {\n        this.program = PointsProgram.get(gl);\n        this.buffer = buffer;\n        this.entity = entity;\n        this.mode = mode;\n    }\n    dispose() {\n        this.buffer.dispose();\n    }\n    draw(rc: glview.RenderingContext) {\n        this.program.draw(rc, this.buffer, this.mode, new glview.Color3(0, 1, 0));\n    }\n    drawForSelection(rc: glview.RenderingContext, session: glview.SelectionSession) {\n        this.program.draw(rc, this.buffer, this.mode, session.emitColor3f(this.entity));\n    }\n}\n\nexport class VertexNormalsDrawer implements glview.Drawable {\n    static shaderNo: number = 0;\n    static incrementShaderNo() {\n        ++this.shaderNo;\n    }\n    //private readonly shadingProgram: PointNormalsProgram;\n    private readonly shadingPrograms: PointNormalsProgram[];\n    private readonly selectionProgram: PointsProgram;\n    private readonly buffer: vbo.VertexNormalBuffer;\n    private readonly entity: object;\n    private readonly mode: number;\n    constructor(gl: WebGLRenderingContext, buffer: vbo.VertexNormalBuffer, mode: number, entity: object) {\n        //this.shadingProgram = PhongShadingProgram.get(gl);\n        this.shadingPrograms = [\n            PhongShadingProgram.get(gl),\n            ToonShadingProgram.get(gl),\n            CrazyShadingProgram.get(gl),\n            PulseAnimationProgram.get(gl),\n        ];\n        this.selectionProgram = PointsProgram.get(gl);\n        this.buffer = buffer;\n        this.entity = entity;\n        this.mode = mode;\n    }\n    dispose() {\n        this.buffer.dispose();\n    }\n    draw(rc: glview.RenderingContext) {\n        //this.shadingProgram.draw(rc, this.buffer, this.mode);\n        const i = VertexNormalsDrawer.shaderNo % this.shadingPrograms.length;\n        this.shadingPrograms[i].draw(rc, this.buffer, this.mode);\n    }\n    drawForSelection(rc: glview.RenderingContext, session: glview.SelectionSession) {\n        this.selectionProgram.draw(rc, this.buffer, this.mode, session.emitColor3f(this.entity));\n    }\n}\n","import * as vec from './vecmath';\nimport * as shaders from './shaders';\n\nexport class Color3 {\n    readonly r: number;\n    readonly g: number;\n    readonly b: number;\n    constructor(r: number, g: number, b: number) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    to3f() {\n        return new Color3(\n            this.r / 0xff,\n            this.g / 0xff,\n            this.b / 0xff);\n    }\n    to3b() {\n        return new Color3(\n            Math.round(this.r * 0xff),\n            Math.round(this.g * 0xff),\n            Math.round(this.b * 0xff));\n    }\n}\n\nexport interface RenderingContext {\n    gl: WebGLRenderingContext;\n    canvasWidth: number;\n    canvasHeight: number;\n    camera: Camera;\n    glUniformProjectionMatrix(location: WebGLUniformLocation): void;\n    glUniformModelViewMatrix(location: WebGLUniformLocation): void;\n}\n\nexport class Camera {\n    private static orthoMatrix(volume: vec.Box3): vec.Matrix4 {\n        const c = volume.center;\n        const w = volume.x.upper - c.x;\n        const h = volume.y.upper - c.y;\n        const d = volume.z.upper - c.z;\n        return new vec.Matrix4([\n            1 / w, 0, 0, 0,\n            0, 1 / h, 0, 0,\n            0, 0, 1 / d, 0,\n            -c.x / w, -c.y / h, -c.z / d, 1\n        ]);\n    }\n    private static makeProjMatrix(depth: vec.Interval, scale: number, canvasWidth: number, canvasHeight: number): vec.Matrix4 {\n        const [w, h] = (canvasWidth < canvasHeight) ?\n            [scale, scale * canvasHeight / canvasWidth] :\n            [scale * canvasWidth / canvasHeight, scale];\n        const volume = new vec.Box3(\n            new vec.Interval(-w, w),\n            new vec.Interval(-h, h),\n            depth);\n        return this.orthoMatrix(volume);\n    }\n\n    focus: vec.RigidTrans;\n    scale: number;\n    constructor(focus: vec.RigidTrans, scale: number) {\n        this.focus = focus;\n        this.scale = scale;\n    }\n    fit(world: vec.Sphere) {\n        this.focus = new vec.RigidTrans(this.focus.r, world.center);\n        this.scale = world.radius;\n    }\n    createMatrix(world: vec.Sphere, canvasWidth: number, canvasHeight: number): [vec.Matrix4, vec.Matrix4] {\n        const inv = this.focus.inverse();\n        const centerZ = inv.transform(world.center).z;\n        const projMatrix = Camera.makeProjMatrix(\n            new vec.Interval(centerZ - world.radius, centerZ + world.radius),\n            this.scale, canvasWidth, canvasHeight);\n        return [projMatrix, inv.toMatrix()]\n    }\n}\n\nexport class SelectionSession {\n    private readonly objects: object[] = [];\n    emitColor3f(obj: object): Color3 {\n        this.objects.push(obj);\n        return SelectionSession.encodeToColor3b(this.objects.length).to3f();\n    }\n    getObject(color3b: Color3): object | null {\n        const i = SelectionSession.decodeFromColor3b(color3b);\n        return 0 < i && i <= this.objects.length ? this.objects[i - 1] : null;\n    }\n    private static encodeToColor3b(n: number): Color3 {\n        return new Color3(\n            n % 0x100,\n            Math.floor(n / 0x100) % 0x100,\n            Math.floor(n / 0x10000) % 0x100);\n    }\n    private static decodeFromColor3b(color3b: Color3): number {\n        return color3b.r + color3b.g * 0x100 + color3b.b * 0x10000;\n    }\n}\n\nclass SelectionBuffer {\n    private readonly gl: WebGLRenderingContext;\n    private readonly renderFunc: (session: SelectionSession) => void;\n    private readonly fb: WebGLFramebuffer | null;\n    private readonly depthBuf: WebGLRenderbuffer | null;\n    private readonly colorBuf: WebGLTexture | null;\n    private canvasWidth: number = -1;\n    private canvasHeight: number = -1;\n    private session: SelectionSession | null = null;\n    constructor(gl: WebGLRenderingContext, renderFunc: (session: SelectionSession) => void) {\n        this.gl = gl;\n        this.renderFunc = renderFunc;\n        this.fb = gl.createFramebuffer();\n        this.depthBuf = gl.createRenderbuffer();\n        this.colorBuf = gl.createTexture();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.fb);\n\n        // attach depth buffer to framebuffer\n        gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuf);\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.depthBuf);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\n        // attach color buffer to framebuffer\n        gl.bindTexture(gl.TEXTURE_2D, this.colorBuf);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.colorBuf, 0);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n    dispose() {\n        this.gl.deleteFramebuffer(this.fb);\n        this.gl.deleteRenderbuffer(this.depthBuf);\n        this.gl.deleteTexture(this.colorBuf);\n    }\n    clearSession() {\n        this.session = null;\n    }\n    select(x: number, y: number, width: number, height: number) {\n        const gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.fb);\n        if (width !== this.canvasWidth || height !== this.canvasHeight) {\n            console.log(\"setup depth-buffer, color-buffer\");\n            this.session = null;\n            this.canvasWidth = width;\n            this.canvasHeight = height;\n\n            gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuf);\n            gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\n            gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\n            gl.bindTexture(gl.TEXTURE_2D, this.colorBuf);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, width, height, 0, gl.RGB, gl.UNSIGNED_BYTE, null);\n            gl.bindTexture(gl.TEXTURE_2D, null);\n\n            gl.viewport(0, 0, width, height);\n        }\n        if (this.session === null) {\n            console.log(\"render for selection\");\n            this.session = this.render();\n        }\n        let pixels = new Uint8Array(3);\n        gl.readPixels(x, this.canvasHeight - y, 1, 1, gl.RGB, gl.UNSIGNED_BYTE, pixels);\n        let color = new Color3(pixels[0], pixels[1], pixels[2]);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n        return this.session.getObject(color);\n    }\n    render() {\n        const session = new SelectionSession();\n        this.gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n        this.renderFunc(session);\n        this.gl.flush();\n        return session;\n    }\n}\n\nexport interface Dispose {\n    dispose: () => void;\n}\n\nexport interface Drawable extends Dispose {\n    draw(rc: RenderingContext): void;\n    drawForSelection(rc: RenderingContext, session: SelectionSession): void;\n}\n\nexport interface DrawableSource {\n    getDrawer(gl: WebGLRenderingContext): Drawable;\n    boundingSphere(): vec.Sphere | undefined;\n}\n\nclass DrawableList implements Drawable {\n    readonly items: Drawable[];\n    constructor(items: Drawable[] = []) {\n        this.items = items;\n    }\n    dispose() {\n        for (let x of this.items) x.dispose();\n    }\n    draw(rc: RenderingContext) {\n        for (let x of this.items) x.draw(rc);\n    }\n    drawForSelection(rc: RenderingContext, session: SelectionSession) {\n        for (let x of this.items) x.drawForSelection(rc, session);\n    }\n}\n\nexport class SceneGraph implements DrawableSource {\n    private nodes: DrawableSource[] = [];\n    private world: vec.Sphere | null = null;\n    private drawer: DrawableList | null = null;\n    getDrawer(gl: WebGLRenderingContext): Drawable {\n        if (this.drawer === null) {\n            this.drawer = new DrawableList(this.nodes.map(x => x.getDrawer(gl)));\n        }\n        return this.drawer;\n    }\n    boundingSphere(): vec.Sphere {\n        if (this.world === null) {\n            const spheres = this.nodes.map(node => node.boundingSphere()).filter(s => s !== undefined).map(s => s!);\n            this.world = spheres.length === 0 ? vec.Sphere.UNIT : vec.Sphere.boundaryOfArray(spheres);\n        }\n        return this.world;\n    }\n    get nodeCount(): number {\n        return this.nodes.length\n    }\n    getNode(i: number): DrawableSource {\n        return this.nodes[i];\n    }\n    setNodes(nodes: DrawableSource[]) {\n        this.nodes = nodes;\n        this.world = null;\n        this.drawer = null;\n    }\n    clearNodes() {\n        this.setNodes([]);\n    }\n    addNode(node: DrawableSource) {\n        this.nodes.push(node);\n        this.world = null;\n        this.drawer = null;\n    }\n}\n\nexport class GLView {\n    readonly canvas: HTMLCanvasElement;\n    readonly gl: WebGLRenderingContext;\n    readonly camera = new Camera(vec.RigidTrans.UNIT, 1.0);\n    readonly sceneGraph: SceneGraph;\n    private readonly selectionBuf: SelectionBuffer;\n    constructor(canvas: HTMLCanvasElement, useWebGL2: boolean, sceneGraph: SceneGraph, renderIntervalMilliseconds?: number) {\n        const gl = canvas.getContext(useWebGL2 ? \"webgl2\" : \"webgl\") as WebGLRenderingContext;\n        this.canvas = canvas;\n        this.gl = gl;\n        this.sceneGraph = sceneGraph;\n        this.selectionBuf = new SelectionBuffer(gl, (session) => {\n            const rc = this.createContext();\n            this.sceneGraph.getDrawer(this.gl).drawForSelection(rc, session);\n        });\n\n        if (renderIntervalMilliseconds) {\n            // 設定されたインターバルで再描画\n            setInterval(() => { this.render() }, renderIntervalMilliseconds);\n        }\n\n        // Projection Matrix で視線方向を反転させていないので（つまり右手系のままなので）、\n        // 通常の OpenGL と違ってデプス値はゼロで初期化して depthFunc を GL_GREATER にする。\n        gl.clearDepth(0.0);\n        gl.enable(gl.DEPTH_TEST);\n        gl.depthFunc(gl.GREATER);\n\n        canvas.oncontextmenu = function () { return false; };    // disable context menu\n        canvas.addEventListener(\"mousedown\", e => {\n            if (e.button !== 2) return;\n            const scale = this.camera.scale;\n            const focus = this.camera.focus;\n            const lengthPerPixel = this.lengthPerPixel();\n            const [x0, y0] = [e.offsetX, e.offsetY];\n            const onMouseMove = (e: MouseEvent) => {\n                const dx = e.offsetX - x0;\n                const dy = e.offsetY - y0;\n                const move = focus.r.transform(new vec.Vec3(lengthPerPixel * dx, -lengthPerPixel * dy, 0));\n                if (e.shiftKey) {\n                    this.camera.focus = new vec.RigidTrans(this.camera.focus.r, focus.t.sub(move));\n                }\n                else if (e.ctrlKey) {\n                    const y = Math.abs(dy) / 40;\n                    const factor = dy > 0 ? 1.0 / (1 + y) : 1 + y;\n                    this.camera.scale = factor * scale;\n                }\n                else {\n                    const axis = move.cross(focus.r.n);\n                    const radian = move.length() / this.camera.scale;\n                    this.camera.focus = new vec.RigidTrans(vec.Rotation.ofAxis(axis, radian).mul(focus.r), this.camera.focus.t);\n                }\n                this.render();\n            };\n            const onMouseUp = (e: MouseEvent) => {\n                document.removeEventListener(\"mousemove\", onMouseMove);\n                document.removeEventListener(\"mouseup\", onMouseUp);\n            };\n            document.addEventListener(\"mousemove\", onMouseMove);\n            document.addEventListener(\"mouseup\", onMouseUp);\n        });\n        canvas.addEventListener(\"wheel\", e => {\n            const y = 0.1 * Math.abs(e.deltaY) / 100;\n            const factor = e.deltaY > 0 ? 1 / (1 + y) : 1 + y;\n            this.camera.scale *= factor;\n            this.render();\n        });\n        canvas.addEventListener(\"mousedown\", e => {\n            if (e.button !== 0) return;\n            const obj = this.selectionBuf.select(e.offsetX, e.offsetY, this.canvas.width, this.canvas.height);\n            console.log(obj);\n        });\n        canvas.ownerDocument?.addEventListener(\"keydown\", e => {\n            if (e.key === \"1\") {\n                shaders.VertexNormalsDrawer.incrementShaderNo();\n                this.render();\n            }\n        });\n    }\n    fit() {\n        this.camera.fit(this.sceneGraph.boundingSphere());\n    }\n    render() {\n        const rc = this.createContext();\n        this.gl.clearColor(0.3, 0.3, 0.3, 1);\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n        this.sceneGraph.getDrawer(this.gl).draw(rc);\n        this.selectionBuf.clearSession();\n        //this.selectionBuf.render(); // for debug\n    }\n    private createContext(): RenderingContext {\n        const [projMatrix, viewMatrix] = this.camera.createMatrix(\n            this.sceneGraph.boundingSphere(), this.canvas.width, this.canvas.height);\n        return {\n            gl: this.gl,\n            canvasWidth: this.canvas.width,\n            canvasHeight: this.canvas.height,\n            camera: this.camera,\n            glUniformProjectionMatrix: location => this.gl.uniformMatrix4fv(location, false, projMatrix.array),\n            glUniformModelViewMatrix: location => this.gl.uniformMatrix4fv(location, false, viewMatrix.array)\n        }\n    }\n    lengthPerPixel() {\n        return 2 * this.camera.scale / Math.min(this.canvas.width, this.canvas.height);\n    }\n    resize(width: number, height: number) {\n        this.canvas.width = width;\n        this.canvas.height = height;\n        this.gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n        this.render();\n    }\n    resizeToWindow() {\n        const rect = this.canvas.getBoundingClientRect();\n        const margin = rect.left;\n        this.resize(window.innerWidth - 2 * margin, window.innerHeight - rect.top - margin);\n    }\n}\n\nexport function isWebGL2(gl: WebGLRenderingContext): boolean {\n    return (gl.getParameter(gl.VERSION) as string).startsWith(\"WebGL 2.0\");\n}\n\nexport function buildShader(gl: WebGLRenderingContext, type: number, src: string): WebGLShader {\n    const shader = gl.createShader(type);\n    if (shader == null) throw new Error(\"shader is null\");\n    gl.shaderSource(shader, src);\n    gl.compileShader(shader);\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        console.log(gl.getShaderInfoLog(shader));\n        throw new Error(\"compile error\");\n    }\n    return shader;\n}\n\nexport function createProgram(gl: WebGLRenderingContext, srcV: string, srcF: string): WebGLProgram {\n    const shaderV = buildShader(gl, gl.VERTEX_SHADER, srcV);\n    const shaderF = buildShader(gl, gl.FRAGMENT_SHADER, srcF);\n    const program = gl.createProgram();\n    if (program == null) throw new Error(\"program is null\");\n    gl.attachShader(program, shaderV);\n    gl.attachShader(program, shaderF);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n        console.log(gl.getProgramInfoLog(program));\n        throw new Error(\"Link Error\");\n    }\n    return program;\n}\n\nexport function createCache<Key, T>(factory: (key: Key) => T) {\n    /*\n    const registry = new Map<Key, T>();\n    return (key: Key) => {\n        let instance = registry.get(key);\n        if (instance === undefined) {\n            instance = factory(key);\n            registry.set(key, instance);\n        }\n        return instance;\n    };\n    */\n    // registry の要素数は非常に少ないことを想定しているので、Map を使うよりも配列の線形探索のほうが速いはず\n    const cache: { key: Key; value: T; }[] = [];\n    return (key: Key) => {\n        let item = cache.find(x => x.key === key);\n        if (item === undefined) {\n            item = { key: key, value: factory(key) };\n            cache.push(item);\n        }\n        return item.value;\n    };\n}\n","import * as glview from './glview';\n\nexport interface VertexBuffer extends glview.Dispose {\n    gl: WebGLRenderingContext;\n    vertexCount: number;\n    enablePoints(atrPosition: number): void;\n}\n\nexport interface VertexNormalBuffer extends VertexBuffer {\n    enableNormals(atrPosition: number): void;\n}\n\nexport interface VertexUVBuffer extends VertexBuffer {\n    enableUVs(atrUV: number): void;\n}\n\nexport function createPointsBuffer(\n    gl: WebGLRenderingContext,\n    points: Float32Array,\n): VertexBuffer {\n    return new Points(gl, points);\n}\n\nexport function createPointsAndNormalsBuffer(\n    gl: WebGLRenderingContext,\n    points: Float32Array,\n    normals: Float32Array\n): VertexNormalBuffer {\n    return new PointsAndNormals(gl, points, normals);\n}\n\nexport function createInterleavedPointNormalsBuffer(\n    gl: WebGLRenderingContext,\n    pointNormals: Float32Array\n): VertexNormalBuffer {\n    return new InterleavedPointNormals(gl, pointNormals);\n}\n\nexport function createInterleavedPointUVsBuffer(\n    gl: WebGLRenderingContext,\n    pointUVs: Float32Array\n): VertexUVBuffer {\n    return new InterleavedPointUVs(gl, pointUVs);\n}\n\nfunction createBuffer(gl: WebGLRenderingContext, data: Float32Array): WebGLBuffer | null {\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n    return buf;\n}\n\nclass Points implements VertexBuffer {\n    readonly gl: WebGLRenderingContext;\n    readonly points: WebGLBuffer | null;\n    readonly vertexCount: number;\n    constructor(gl: WebGLRenderingContext, points: Float32Array) {\n        this.gl = gl;\n        this.points = createBuffer(gl, points);\n        this.vertexCount = points.length / 3;\n    }\n    dispose() {\n        this.gl.deleteBuffer(this.points);\n    }\n    enablePoints(atrPosition: number): void {\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.points);\n        this.gl.enableVertexAttribArray(atrPosition);\n        this.gl.vertexAttribPointer(atrPosition, 3, this.gl.FLOAT, false, 0, 0);\n    }\n}\n\nclass PointsAndNormals implements VertexNormalBuffer {\n    readonly gl: WebGLRenderingContext;\n    readonly points: WebGLBuffer | null;\n    readonly normals: WebGLBuffer | null;\n    readonly vertexCount: number;\n    constructor(gl: WebGLRenderingContext, points: Float32Array, normals: Float32Array) {\n        if (points.length !== normals.length) throw new Error(\"points.length != normals.length\");\n        this.gl = gl;\n        this.points = createBuffer(gl, points);\n        this.normals = createBuffer(gl, normals);\n        this.vertexCount = points.length / 3;\n    }\n    dispose() {\n        this.gl.deleteBuffer(this.points);\n        this.gl.deleteBuffer(this.normals);\n    }\n    enablePoints(atrPosition: number): void {\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.points);\n        this.gl.enableVertexAttribArray(atrPosition);\n        this.gl.vertexAttribPointer(atrPosition, 3, this.gl.FLOAT, false, 0, 0);\n    }\n    enableNormals(atrNormal: number): void {\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.normals);\n        this.gl.enableVertexAttribArray(atrNormal);\n        this.gl.vertexAttribPointer(atrNormal, 3, this.gl.FLOAT, true, 0, 0);\n    }\n}\n\nclass InterleavedPointNormals implements VertexNormalBuffer {\n    readonly gl: WebGLRenderingContext;\n    readonly pointNormals: WebGLBuffer | null;\n    readonly vertexCount: number;\n    constructor(gl: WebGLRenderingContext, pointNormals: Float32Array) {\n        this.gl = gl;\n        this.pointNormals = createBuffer(gl, pointNormals);\n        this.vertexCount = pointNormals.length / 6;\n    }\n    dispose() {\n        this.gl.deleteBuffer(this.pointNormals);\n    }\n    enablePoints(atrPosition: number): void {\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointNormals);\n        this.gl.enableVertexAttribArray(atrPosition);\n        this.gl.vertexAttribPointer(atrPosition, 3, this.gl.FLOAT, false, 4 * 6, 0);\n    }\n    enableNormals(atrNormal: number): void {\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointNormals);\n        this.gl.enableVertexAttribArray(atrNormal);\n        this.gl.vertexAttribPointer(atrNormal, 3, this.gl.FLOAT, true, 4 * 6, 4 * 3);\n    }\n}\n\n\nclass InterleavedPointUVs implements VertexUVBuffer {\n    readonly gl: WebGLRenderingContext;\n    readonly pointUVs: WebGLBuffer | null;\n    readonly vertexCount: number;\n    constructor(gl: WebGLRenderingContext, pointUVs: Float32Array) {\n        this.gl = gl;\n        this.pointUVs = createBuffer(gl, pointUVs);\n        this.vertexCount = pointUVs.length / 5;\n    }\n    dispose() {\n        this.gl.deleteBuffer(this.pointUVs);\n    }\n    enablePoints(atrPosition: number): void {\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointUVs);\n        this.gl.enableVertexAttribArray(atrPosition);\n        this.gl.vertexAttribPointer(atrPosition, 3, this.gl.FLOAT, false, 4 * 5, 0);\n    }\n    enableUVs(atrUV: number): void {\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.pointUVs);\n        this.gl.enableVertexAttribArray(atrUV);\n        this.gl.vertexAttribPointer(atrUV, 2, this.gl.FLOAT, false, 4 * 5, 4 * 3);\n    }\n}\n","import * as vec from './vecmath';\nimport * as glview from './glview';\nimport * as shaders from './shaders';\nimport * as vbo from './vbo';\n\nexport default class Lines implements glview.DrawableSource {\n    private readonly points: Float32Array;\n    private readonly boundary?: vec.Sphere;\n    private readonly entity: object;\n    constructor(points: Float32Array, entity: object | null = null) {\n        this.points = points;\n        this.boundary = vec.Box3.boundaryOf(points)?.boundingSphere();\n        this.entity = entity === null ? this : entity;\n    }\n    readonly getDrawer = glview.createCache((gl: WebGLRenderingContext) =>\n        new shaders.VerticesDrawer(gl, vbo.createPointsBuffer(gl, this.points), gl.LINES, this.entity));\n    boundingSphere(): vec.Sphere | undefined {\n        return this.boundary;\n    }\n}\n","import * as vec from './vecmath';\nimport * as glview from './glview';\nimport * as shaders from './shaders';\nimport * as vbo from './vbo';\nimport * as points from './points';\nimport Lines from './lines';\n\nexport default class Triangles implements glview.DrawableSource {\n    readonly vertices: points.PointNormals;\n    private readonly entity: object;\n    constructor(vertices: points.PointNormals, entity: object | null = null) {\n        this.vertices = vertices;\n        this.entity = entity === null ? this : entity;\n    }\n    readonly getDrawer = glview.createCache((gl: WebGLRenderingContext) =>\n        new shaders.VertexNormalsDrawer(\n            gl,\n            this.vertices.createVertexBuffer(gl),\n            gl.TRIANGLES,\n            this.entity\n        ));\n    boundingSphere(): vec.Sphere | undefined {\n        return this.vertices.boundingSphere();\n    }\n    get triangleCount() {\n        return this.vertices.count / 3;\n    }\n    getTriangle(i: number) {\n        return new vec.Triangle(\n            this.vertices.getPoint(3 * i + 0),\n            this.vertices.getPoint(3 * i + 1),\n            this.vertices.getPoint(3 * i + 2));\n    }\n    toWireframe(): Lines {\n        const points = new Float32Array(2 * 3 * this.vertices.count);\n        for (let i = 0; i < this.triangleCount; ++i) {\n            for (let j = 0; j < 3; ++j) {\n                const idx = 3 * i + j;\n                const next = 3 * i + (j + 1) % 3;\n                const p1 = this.vertices.getPoint(idx);\n                const p2 = this.vertices.getPoint(next);\n                points[3 * (2 * idx + 0) + 0] = p1.x;\n                points[3 * (2 * idx + 0) + 1] = p1.y;\n                points[3 * (2 * idx + 0) + 2] = p1.z;\n                points[3 * (2 * idx + 1) + 0] = p2.x;\n                points[3 * (2 * idx + 1) + 1] = p2.y;\n                points[3 * (2 * idx + 1) + 2] = p2.z;\n            }\n        }\n        return new Lines(points, this.entity);\n    }\n}\n","import * as vec from './vecmath';\nimport * as glview from './glview';\nimport * as vbo from './vbo';\nimport * as shaders from './shaders';\n\nexport interface PointNormals extends glview.DrawableSource {\n    createVertexBuffer(gl: WebGLRenderingContext): vbo.VertexNormalBuffer;\n    count: number;\n    getPoint(i: number): vec.Vec3;\n    getNormal(i: number): vec.Vec3;\n}\n\nexport function createInterleavedPointNormals(data: Float32Array, entity?: object): PointNormals {\n    return new InterleavedPointNormals(data, entity);\n}\n\nexport function createPointsAndNormals(points: Float32Array, normals: Float32Array, entity?: object): PointNormals {\n    return new PointsAndNormals(points, normals, entity);\n}\n\nclass InterleavedPointNormals implements PointNormals {\n    readonly data: Float32Array;\n    private readonly boundary: vec.Sphere | undefined;\n    private readonly entity: object;\n    constructor(data: Float32Array, entity?: object) {\n        this.data = data;\n        this.entity = entity || this;\n        const builder = new vec.Box3Builder();\n        for (let i = 0; i < this.count; ++i) {\n            builder.add(this.getPoint(i));\n        }\n        this.boundary = builder.build()?.boundingSphere();\n    }\n    readonly getDrawer = glview.createCache((gl: WebGLRenderingContext) =>\n        new shaders.VertexNormalsDrawer(gl, this.createVertexBuffer(gl), gl.POINTS, this.entity));\n    boundingSphere(): vec.Sphere | undefined {\n        return this.boundary;\n    }\n    createVertexBuffer(gl: WebGLRenderingContext): vbo.VertexNormalBuffer {\n        return vbo.createInterleavedPointNormalsBuffer(gl, this.data);\n    }\n    get count(): number {\n        return this.data.length / 6;\n    }\n    getPoint(i: number): vec.Vec3 {\n        return new vec.Vec3(this.data[6 * i + 0], this.data[6 * i + 1], this.data[6 * i + 2]);\n    }\n    getNormal(i: number): vec.Vec3 {\n        return new vec.Vec3(this.data[6 * i + 3], this.data[6 * i + 4], this.data[6 * i + 5]);\n    }\n}\n\nclass PointsAndNormals implements PointNormals {\n    private readonly points: Float32Array;\n    private readonly normals: Float32Array;\n    private readonly boundary: vec.Sphere | undefined;\n    private readonly entity: object;\n    constructor(points: Float32Array, normals: Float32Array, entity?: object) {\n        if (points.length !== normals.length) throw new Error(\"points.length !== normals.length\");\n        this.points = points;\n        this.normals = normals;\n        this.entity = entity || this;\n        this.boundary = vec.Box3.boundaryOf(points)?.boundingSphere();\n    }\n    readonly getDrawer = glview.createCache((gl: WebGLRenderingContext) =>\n        new shaders.VertexNormalsDrawer(gl, this.createVertexBuffer(gl), gl.POINTS, this.entity));\n    boundingSphere(): vec.Sphere | undefined {\n        return this.boundary;\n    }\n    createVertexBuffer(gl: WebGLRenderingContext): vbo.VertexNormalBuffer {\n        return vbo.createPointsAndNormalsBuffer(gl, this.points, this.normals);\n    }\n    get count(): number {\n        return this.points.length / 3;\n    }\n    getPoint(i: number): vec.Vec3 {\n        return new vec.Vec3(this.points[3 * i + 0], this.points[3 * i + 1], this.points[3 * i + 2]);\n    }\n    getNormal(i: number): vec.Vec3 {\n        return new vec.Vec3(this.normals[3 * i + 0], this.normals[3 * i + 1], this.normals[3 * i + 2]);\n    }\n}\n","import Triangles from './tris';\nimport * as points from './points';\n\nclass ArrayBuf {\n    public static readFile(file: File): Promise<ArrayBuffer> {\n        return new Promise<ArrayBuffer>((resolve) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result as ArrayBuffer);\n            reader.readAsArrayBuffer(file);\n        });\n    }\n}\n\nexport class STLFormat {\n    /*\n    public static readBuf(data: ArrayBuffer): Triangles {\n        const isLittleEndian = true;\n        const view = new DataView(data);\n        const ntris = view.getUint32(80, true); // little endian を指定する必要あり\n        const points = new Float32Array(3 * 3 * ntris);\n        const normals = new Float32Array(3 * 3 * ntris);\n        for (let i = 0; i < ntris; ++i) {\n            let pos = 84 + i * 50;\n            const read = function () { pos += 4; return view.getFloat32(pos - 4, isLittleEndian); }\n            const nx = read();\n            const ny = read();\n            const nz = read();\n            for (let k = 0; k < 3; ++k) {\n                const idx = 3 * (3 * i + k);\n                normals[idx + 0] = nx;\n                normals[idx + 1] = ny;\n                normals[idx + 2] = nz;\n                points[idx + 0] = read();\n                points[idx + 1] = read();\n                points[idx + 2] = read();\n            }\n        }\n        return new Triangles(points, normals);\n    }\n    */\n    public static readBuf(data: ArrayBuffer): Triangles {\n        const isLittleEndian = true;\n        const view = new DataView(data);\n        const ntris = view.getUint32(80, true); // little endian を指定する必要あり\n        const pointNormals = new Float32Array((3 + 3) * 3 * ntris);\n        for (let i = 0; i < ntris; ++i) {\n            let pos = 84 + i * 50;\n            const read = function () { pos += 4; return view.getFloat32(pos - 4, isLittleEndian); }\n            const nx = read();\n            const ny = read();\n            const nz = read();\n            for (let k = 0; k < 3; ++k) {\n                const idx = 6 * (3 * i + k);\n                pointNormals[idx + 0] = read();\n                pointNormals[idx + 1] = read();\n                pointNormals[idx + 2] = read();\n                pointNormals[idx + 3] = nx;\n                pointNormals[idx + 4] = ny;\n                pointNormals[idx + 5] = nz;\n            }\n        }\n        return new Triangles(points.createInterleavedPointNormals(pointNormals));\n    }\n\n    public static async readFile(file: File): Promise<Triangles> {\n        const buf = await ArrayBuf.readFile(file);\n        return STLFormat.readBuf(buf);\n    }\n\n    public static async readURL(url: string) {\n        const response = await fetch(url);\n        const buf = await response.arrayBuffer();\n        return STLFormat.readBuf(buf);\n    }\n}\n","\nimport React, { useEffect, useRef } from 'react';\nimport './App.css';\nimport * as glview from './glview/glview';\nimport { STLFormat } from './glview/stl';\n\n\nexport class GLCanvas extends React.PureComponent<{ useWebGL2: boolean }> {\n    view: glview.GLView | null = null;\n    private canvas: React.RefObject<HTMLCanvasElement>;\n    private sceneGraph = new glview.SceneGraph();\n    constructor(props: { useWebGL2: boolean }) {\n        super(props);\n        this.canvas = React.createRef();\n    }\n    public componentDidMount() {\n        if (this.canvas.current != null) {\n            this.view = new glview.GLView(this.canvas.current, this.props.useWebGL2, this.sceneGraph);\n            STLFormat.readURL(\"sample.stl\").then(tris => {\n                this.sceneGraph.addNode(tris);\n                this.view?.fit();\n                this.view?.render();\n            })\n            this.view.render();\n        }\n    }\n    public render() {\n        return (\n            <div>\n                <canvas ref={this.canvas} width=\"600\" height=\"400\" >WebGL 2.0 must be supported.</canvas>\n            </div>\n        );\n    }\n}\n\nexport function GLCanvas2(props: { useWebGL2: boolean, scene: glview.DrawableSource | null, renderInterval?: number }) {\n    let view = useRef<glview.GLView | null>(null);\n    const canvas = useRef<HTMLCanvasElement>(null);\n    const sceneGraph = useRef(new glview.SceneGraph());\n    useEffect(() => {\n        if (props.scene !== null) {\n            sceneGraph.current.addNode(props.scene);\n        }\n        if (canvas.current != null) {\n            view.current = new glview.GLView(canvas.current, props.useWebGL2, sceneGraph.current, props.renderInterval);\n        }\n    }, [canvas, props.useWebGL2, props.renderInterval]);\n    useEffect(() => {\n        if (view.current != null && props.scene != null) {\n            sceneGraph.current.clearNodes();\n            sceneGraph.current.addNode(props.scene);\n            view.current.fit();\n            view.current.render();\n        }\n    }, [props.scene]);\n    return (\n        <canvas ref={canvas} width=\"800\" height=\"600\" style={{ borderStyle: \"solid\" }}>WebGL 2.0 must be supported.</canvas>\n    );\n}\n","import * as vec from './vecmath';\nimport * as glview from './glview';\n\nconst vs = `\nattribute vec4 position;\nattribute vec2 texCoord;\nuniform mat4 modelViewMatrix;\nuniform mat4 projMatrix;\nvarying vec2 oTexCoord;\nvoid main() {\n    gl_Position = projMatrix * modelViewMatrix * position;\n    oTexCoord = vec2(texCoord.x, 1.0 - texCoord.y);\n}\n`;\n\nconst fs = `\nprecision mediump float;\nuniform sampler2D texture;\nuniform vec3 color;\nuniform bool isTextureEnabled;\nvarying vec2 oTexCoord;\nvoid main(){\n    if (isTextureEnabled) {\n        gl_FragColor = vec4(color, 1) * texture2D(texture, oTexCoord);\n    } else {\n        gl_FragColor = vec4(color, 1);\n    }\n}\n`;\n\nclass ImageBoardProgram {\n    static readonly get = glview.createCache((gl: WebGLRenderingContext) => new ImageBoardProgram(gl));\n    readonly gl: WebGLRenderingContext;\n    private readonly program: WebGLProgram;\n    private readonly atrPosition: number;\n    private readonly atrTexCoord: number;\n    private readonly uniModelViewMatrix: WebGLUniformLocation;\n    private readonly uniProjMatrix: WebGLUniformLocation;\n    private readonly uniTexture: WebGLUniformLocation;\n    private readonly uniColor: WebGLUniformLocation;\n    private readonly uniIsTextureEnabled: WebGLUniformLocation;\n    constructor(gl: WebGLRenderingContext) {\n        this.gl = gl;\n        this.program = glview.createProgram(gl, vs, fs);\n        this.atrPosition = gl.getAttribLocation(this.program, \"position\");\n        this.atrTexCoord = gl.getAttribLocation(this.program, \"texCoord\");\n        this.uniModelViewMatrix = gl.getUniformLocation(this.program, \"modelViewMatrix\")!;\n        this.uniProjMatrix = gl.getUniformLocation(this.program, \"projMatrix\")!;\n        this.uniTexture = gl.getUniformLocation(this.program, \"texture\")!;\n        this.uniColor = gl.getUniformLocation(this.program, \"color\")!;\n        this.uniIsTextureEnabled = gl.getUniformLocation(this.program, \"isTextureEnabled\")!;\n    }\n    draw(rc: glview.RenderingContext, texOrColor: WebGLTexture | glview.Color3, points: WebGLBuffer, texCoords: WebGLBuffer, count: number) {\n        if (rc.gl !== this.gl) throw new Error(\"TrianglesDrawerProgram: GL rendering context mismatch\");\n        const gl = rc.gl;\n        gl.useProgram(this.program);\n        rc.glUniformModelViewMatrix(this.uniModelViewMatrix);\n        rc.glUniformProjectionMatrix(this.uniProjMatrix);\n\n        if ('r' in texOrColor) {\n            gl.uniform3f(this.uniColor, texOrColor.r, texOrColor.g, texOrColor.b);\n            gl.uniform1i(this.uniIsTextureEnabled, 0);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, texOrColor);\n            gl.uniform1i(this.uniTexture, 0);\n            gl.uniform3f(this.uniColor, 1, 1, 1);\n            gl.uniform1i(this.uniIsTextureEnabled, 1);\n        }\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, points);\n        gl.enableVertexAttribArray(this.atrPosition);\n        gl.vertexAttribPointer(this.atrPosition, 3, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, texCoords);\n        gl.enableVertexAttribArray(this.atrTexCoord);\n        gl.vertexAttribPointer(this.atrTexCoord, 2, gl.FLOAT, false, 0, 0);\n\n        gl.drawArrays(gl.TRIANGLE_FAN, 0, count);\n    }\n    createBuffer(data: Float32Array): WebGLBuffer {\n        const buf = this.gl.createBuffer();\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, buf);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, data, this.gl.STATIC_DRAW);\n        return buf!;\n    }\n    createTexCoordBuffer(): WebGLBuffer {\n        const data = new Float32Array(2 * 4);\n        data[0] = 0; data[1] = 0;\n        data[2] = 1; data[3] = 0;\n        data[4] = 1; data[5] = 1;\n        data[6] = 0; data[7] = 1;\n        return this.createBuffer(data);\n    }\n    createTexture(image: TexImageSource): WebGLTexture {\n        const gl = this.gl;\n        const texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        gl.generateMipmap(gl.TEXTURE_2D);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        return texture!;\n    }\n}\n\nclass ImageBoardDrawer implements glview.Drawable {\n    private readonly program: ImageBoardProgram;\n    private readonly count: number;\n    private readonly points: WebGLBuffer;\n    private readonly texCoords: WebGLBuffer;\n    private readonly texture: WebGLTexture;\n    private readonly entity: object;\n    constructor(gl: WebGLRenderingContext, image: TexImageSource, points: Float32Array, entity: object) {\n        this.program = ImageBoardProgram.get(gl);\n        this.count = points.length / 3;\n        this.points = this.program.createBuffer(points);\n        this.texCoords = this.program.createTexCoordBuffer();\n        this.texture = this.program.createTexture(image);\n        this.entity = entity;\n    }\n    dispose() {\n        this.program.gl.deleteBuffer(this.points);\n        this.program.gl.deleteTexture(this.texture);\n    }\n    draw(rc: glview.RenderingContext) {\n        this.program.draw(rc, this.texture, this.points, this.texCoords, this.count);\n    }\n    drawForSelection(rc: glview.RenderingContext, session: glview.SelectionSession) {\n        this.program.draw(rc, session.emitColor3f(this.entity), this.points, this.texCoords, this.count);\n    }\n}\n\nexport class ImageBoard implements glview.DrawableSource {\n    private readonly image: TexImageSource;\n    private readonly pos: vec.RigidTrans;\n    private readonly area: vec.Box2;\n    private readonly boundary: vec.Sphere;\n    private readonly entity: object;\n    constructor(\n        image: TexImageSource,\n        area: vec.Box2 = new vec.Box2(new vec.Interval(0, image.width), new vec.Interval(0, image.height)),\n        pos: vec.RigidTrans = vec.RigidTrans.UNIT,\n        entity: object | null = null\n    ) {\n        this.image = image;\n        this.pos = pos;\n        this.area = area;\n        this.boundary = new vec.Sphere(\n            pos.transform(area.center.to3d()),\n            area.lower.sub(area.center).length()\n        );\n        this.entity = entity === null ? this : entity;\n    }\n    readonly getDrawer = glview.createCache((gl: WebGLRenderingContext) => {\n        return new ImageBoardDrawer(gl, this.image, this.genRectPoints(), this.entity);\n    });\n    boundingSphere(): vec.Sphere {\n        return this.boundary;\n    }\n    private genRectPoints() {\n        const uvpoints = this.area.points_ccw();\n        const points = new Float32Array(3 * uvpoints.length);\n        for (let i = 0; i < uvpoints.length; ++i) {\n            const p = this.pos.transform(uvpoints[i].to3d());\n            points[3 * i + 0] = p.x;\n            points[3 * i + 1] = p.y;\n            points[3 * i + 2] = p.z;\n        }\n        return points;\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport * as glc from './GLCanvas';\nimport * as stl from './glview/stl';\nimport * as giview from './glview/glview';\nimport * as img from './glview/image';\n\n/*\nfunction App() {\n  const canvas: React.RefObject<glc.GLCanvas> = React.createRef();\n  function inputOnChanged(e: React.ChangeEvent<HTMLInputElement>) {\n    const files = e.target.files;\n    if (files != null && files.length >= 1 && canvas.current != null) {\n      const view = canvas.current.view;\n      stl.STLFormat.readFile(files[0]).then(tris => {\n        view?.setScene(tris);\n        view?.fit();\n        view?.render();\n      });\n    }\n  }\n  return (\n    <div className=\"App\">\n      <input id=\"import\" type=\"file\" accept=\".stl\" onChange={inputOnChanged} /><br></br>\n      <glc.GLCanvas useWebGL2={true} ref={canvas}></glc.GLCanvas>\n      <p>Powered by React.<img src={logo} className=\"App-logo\" alt=\"logo\" /></p>\n    </div>\n  );\n}\n*/\n\n//*\nfunction App() {\n  let [scene, setScene] = useState<giview.DrawableSource | null>(null);\n  useEffect(() => {\n    stl.STLFormat.readURL(\"sample.stl\").then(setScene);\n    //stl.STLFormat.readURL(\"sample.stl\").then(tris => tris.toWireframe()).then(setScene);\n  }, []);\n\n  function inputOnChanged(e: React.ChangeEvent<HTMLInputElement>) {\n    const files = e.target.files;\n    if (files != null && files.length >= 1) {\n      stl.STLFormat.readFile(files[0]).then(setScene);\n    }\n  }\n  function inputImageOnChanged(e: React.ChangeEvent<HTMLInputElement>) {\n    const files = e.target.files;\n    if (files != null && files.length >= 1) {\n      const reader = new FileReader();\n      const image = new Image();\n      reader.onload = e => {\n        if (e.target != null) {\n          if (typeof e.target.result === \"string\") {\n            image.src = e.target.result;\n          }\n        }\n      };\n      image.onload = e => {\n        console.log(\"image loaded\");\n        console.log(e);\n        setScene(new img.ImageBoard(image));\n      };\n      reader.readAsDataURL(files[0]);\n    }\n  }\n  return (\n    <div className=\"App\">\n      <input id=\"import\" type=\"file\" accept=\".stl\" onChange={inputOnChanged} /><br></br>\n      <span>画像</span><input id=\"importImage\" type=\"file\" accept=\".jpg\" onChange={inputImageOnChanged} /><br></br>\n      <glc.GLCanvas2 useWebGL2={true} scene={scene} renderInterval={10}></glc.GLCanvas2>\n    </div>\n  );\n}\n//*/\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}